{"version":3,"sources":["Header.jsx","Aside.jsx","Layout.jsx","About.jsx","Views/HomeView/index.jsx","Components/QuizComponent/index.jsx","Views/ExamView/index.jsx","Views/ToeicStructView/index.jsx","Views/SummaryView/index.jsx","Routes.jsx","App.js","index.js","messages.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","onClick","handleToggleSidebar","Typography","variant","IconButton","event","currentTarget","color","Menu","id","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem","Aside","rtl","toggled","handleCollapseSidebar","collapse","useIntl","useHistory","useLocation","breakPoint","collapsed","onToggle","iconShape","icon","exact","to","style","textAlign","Layout","setToggled","setCollapse","value","children","About","HomeView","QuizComponent","HandleNextQuestion","DataQuestion","Answer","questionID","answer","answerID","Form","Check","type","name","label","Question","questionText","Group","controlId","Label","map","item","index","Container","Row","audio","Col","md","controls","src","image","Image","width","height","alt","dangerouslySetInnerHTML","__html","paragraph","onSubmit","preventDefault","questionList","question","Button","ExamView","activeTopic","setActiveTopic","correctAnswer","length","ToeicStructView","Data","Listening","description","count","bgColor","Reading","Content","backgroundColor","maxHeight","overflow","key","SummaryView","Routes","path","App","locale","setLocale","messages","rootElement","document","getElementById","ReactDOM","render","module","exports","ar","sidebarTitle","dashboard","components","dropdown","submenu","multiLevel","new","withPrefix","withSuffix","viewSource","en"],"mappings":"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","file":"static/js/main.a90cfd6c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <header>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <div\r\n              className={`btn-toggle ${classes.menuButton}`}\r\n              onClick={() => props.handleToggleSidebar(true)}\r\n            >\r\n              <FaBars />\r\n            </div>\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              {props.title||'Thi thử Toeic'}\r\n            </Typography>\r\n\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n                transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu,\r\n  SidebarHeader,\r\n  SidebarFooter,\r\n  SidebarContent,\r\n} from \"react-pro-sidebar\";\r\nimport {\r\n  FaTachometerAlt,\r\n  FaGem,\r\n  FaList,\r\n  FaGithub,\r\n  FaRegLaughWink,\r\n  FaHeart,\r\n} from \"react-icons/fa\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst Aside = ({\r\n  rtl,\r\n  toggled,\r\n  handleToggleSidebar,\r\n  handleCollapseSidebar,\r\n  collapse,\r\n}) => {\r\n  const intl = useIntl();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  // const [collapse,setCollapse]=React.useState(true);\r\n\r\n  return (\r\n    <ProSidebar\r\n      rtl={rtl}\r\n      toggled={toggled}\r\n      breakPoint=\"md\"\r\n      collapsed={!toggled ? collapse : !toggled}\r\n      onToggle={handleToggleSidebar}\r\n    >\r\n      <SidebarHeader>\r\n        <div className=\"sidebar-header\">\r\n          {/* <p className=\"user-name text-white mb-2\">John Doe</p>\r\n          <p className=\"user-email\">johndoe@withinpixels.com</p>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"position-absolute bottom-0\">\r\n              <img\r\n                src=\"./assets/images/user.jpg\"\r\n                alt=\"User profile\"\r\n                className=\"user-image\"\r\n              />\r\n            </div>\r\n          </div> */}\r\n          {toggled || (\r\n            <button onClick={() => handleCollapseSidebar(!collapse)}>\r\n              {collapse ? \"Mở rộng\" : \"Thu nhỏ\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </SidebarHeader>\r\n\r\n      <SidebarContent>\r\n        <Menu iconShape=\"circle\">\r\n          <MenuItem\r\n            icon={<FaTachometerAlt />}\r\n            // suffix={\r\n            //   <span className=\"badge red\">\r\n            //     {intl.formatMessage({ id: \"new\" })}\r\n            //   </span>\r\n            // }\r\n          >\r\n            <NavLink exact to={\"/\"}>\r\n              Home\r\n              {/* {intl.formatMessage({ id: \"dashboard\" })} */}\r\n            </NavLink>\r\n          </MenuItem>\r\n          <MenuItem icon={<FaGem />}>\r\n            <NavLink exact to={\"/Information\"}>\r\n              Thông tin về bài thi Toeic\r\n              {/* {intl.formatMessage({ id: \"dashboard\" })} */}\r\n            </NavLink>\r\n            {/* {\" \"}\r\n            {intl.formatMessage({ id: \"components\" })} */}\r\n          </MenuItem>\r\n          <MenuItem icon={<FaGem />}>\r\n            <NavLink exact to={\"/Summary\"}>\r\n              Ôn tập kiến thức\r\n              {/* {intl.formatMessage({ id: \"dashboard\" })} */}\r\n            </NavLink>\r\n            {/* {\" \"}\r\n            {intl.formatMessage({ id: \"components\" })} */}\r\n          </MenuItem>\r\n          <MenuItem icon={<FaGem />}>\r\n            <NavLink exact to={\"/Exam\"}>\r\n              Thi thử Toeic\r\n              {/* {intl.formatMessage({ id: \"dashboard\" })} */}\r\n            </NavLink>\r\n            {/* {\" \"}\r\n            {intl.formatMessage({ id: \"components\" })} */}\r\n          </MenuItem>\r\n        </Menu>\r\n        {/* <Menu iconShape=\"circle\">\r\n          <SubMenu\r\n            suffix={<span className=\"badge yellow\">3</span>}\r\n            title={intl.formatMessage({ id: \"withSuffix\" })}\r\n            icon={<FaRegLaughWink />}\r\n            data-element={location.pathname}\r\n          >\r\n            <MenuItem>\r\n              <NavLink exact to={\"/about\"}>\r\n                {intl.formatMessage({ id: \"submenu\" })} About\r\n              </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>\r\n              <NavLink exact to={\"/\"}>\r\n                {intl.formatMessage({ id: \"submenu\" })} Home 2\r\n              </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 3</MenuItem>\r\n          </SubMenu>\r\n          <SubMenu\r\n            prefix={<span className=\"badge gray\">3</span>}\r\n            title={intl.formatMessage({ id: \"withPrefix\" })}\r\n            icon={<FaHeart />}\r\n            data-element={location.pathname}\r\n          >\r\n            <MenuItem>\r\n              <NavLink exact to={\"/\"}>\r\n                {intl.formatMessage({ id: \"submenu\" })} 1 Home\r\n              </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 2</MenuItem>\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 3</MenuItem>\r\n          </SubMenu>\r\n          <SubMenu\r\n            title={intl.formatMessage({ id: \"multiLevel\" })}\r\n            icon={<FaList />}\r\n          >\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 1 </MenuItem>\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 2 </MenuItem>\r\n            <SubMenu title={`${intl.formatMessage({ id: \"submenu\" })} 3`}>\r\n              <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 3.1 </MenuItem>\r\n              <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 3.2 </MenuItem>\r\n              <SubMenu title={`${intl.formatMessage({ id: \"submenu\" })} 3.3`}>\r\n                <MenuItem>\r\n                  {intl.formatMessage({ id: \"submenu\" })} 3.3.1{\" \"}\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  {intl.formatMessage({ id: \"submenu\" })} 3.3.2{\" \"}\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  {intl.formatMessage({ id: \"submenu\" })} 3.3.3{\" \"}\r\n                </MenuItem>\r\n              </SubMenu>\r\n            </SubMenu>\r\n          </SubMenu>\r\n        </Menu> */}\r\n      </SidebarContent>\r\n\r\n      <SidebarFooter style={{ textAlign: \"center\" }}>\r\n        {/* <div\r\n          className=\"sidebar-btn-wrapper\"\r\n          style={{\r\n            padding: \"20px 24px\"\r\n          }}\r\n        >\r\n          <a\r\n            href=\"https://github.com/azouaoui-med/react-pro-sidebar\"\r\n            target=\"_blank\"\r\n            className=\"sidebar-btn\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FaGithub />\r\n            <span> {intl.formatMessage({ id: \"viewSource\" })}</span>\r\n          </a>\r\n        </div> */}\r\n      </SidebarFooter>\r\n    </ProSidebar>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { useIntl } from \"react-intl\";\r\nimport Aside from \"./Aside\";\r\n\r\nfunction Layout(props) {\r\n  const [rtl, setRtl] = useState(false);\r\n  const [toggled, setToggled] = useState(false);\r\n  const [collapse,setCollapse]=React.useState(false);\r\n  const intl = useIntl();\r\n\r\n  const handleRtlChange = (checked) => {\r\n    setRtl(checked);\r\n    //setLocale(checked ? \"ar\" : \"en\");\r\n  };\r\n\r\n  const handleToggleSidebar = (value) => {\r\n    setToggled(value);\r\n  };\r\n  const handleCollapseSidebar = (value) => {\r\n    setCollapse(value);\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}>\r\n      <Aside\r\n        id={\"Sidebar\"}\r\n        rtl={rtl}\r\n        toggled={toggled}\r\n        collapse={collapse}\r\n        handleToggleSidebar={handleToggleSidebar}\r\n        handleCollapseSidebar={handleCollapseSidebar}\r\n      />\r\n      <main className={`main ${collapse ? \"main-collapse\" : \"non-collapse\"}`}>\r\n        <Header title={props.title} handleToggleSidebar={handleToggleSidebar} />\r\n        <div className=\"app-content\">{props.children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport Layout from \"./Layout\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Layout>\r\n      <h1>About</h1>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import './styles.css';\r\nimport React from \"react\";\r\nimport Layout from \"../../Layout\";\r\n// import { Grid, Card, Text } from \"@nextui-org/react\";\r\n\r\n\r\nfunction HomeView() {\r\n  return (\r\n    <Layout title='Home'>\r\n    <h1>About</h1>\r\n    <div className=\"Home\">    \r\n      <div className='Container'>\r\n        <h3 className='HeadingText'>{'Heading'}</h3>\r\n        <p className='DescriptionText'>{'Description'}</p>\r\n      </div>\r\n    </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport { Image, Form, Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nfunction QuizComponent({ HandleNextQuestion, DataQuestion }) {\r\n  const Answer = ({ questionID, answer, answerID }) => {\r\n    return (\r\n      <Form.Check\r\n        type={\"radio\"}\r\n        name={`group-${questionID}`}\r\n        id={`answer-${questionID}-${answerID}`}\r\n        label={answer}\r\n      />\r\n    );\r\n  };\r\n  const Question = ({\r\n    questionID = \"q1\",\r\n    questionText = \"\",\r\n    answer = [\"(A)\", \"(B)\", \"(C)\", \"(D)\"],\r\n  }) => {\r\n    return (\r\n      <Form.Group controlId={questionID} key={`default-radio`} className=\"mb-3\">\r\n        <Form.Label className=\"question-text\">{questionText}</Form.Label>\r\n        {answer.map((item, index) => {\r\n          return (\r\n            <Answer\r\n              key={index + 1}\r\n              questionID={questionID}\r\n              answer={item}\r\n              answerID={index + 1}\r\n            />\r\n          );\r\n        })}\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    event.preventDefault();\r\n    HandleNextQuestion();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h1>About</h1> */}\r\n      <Container className=\"quiz\">\r\n        <Row className=\"datum\">\r\n          {DataQuestion.audio ? (\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"auto\">\r\n                <audio controls>\r\n                  <source src={DataQuestion.audio} type=\"audio/mpeg\" />\r\n                </audio>\r\n              </Col>\r\n            </Row>\r\n          ) : null}\r\n          {DataQuestion.image ? (\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"auto\">\r\n                <Image\r\n                  width=\"350\"\r\n                  height=\"300\"\r\n                  src={DataQuestion.image}\r\n                  alt=\"Default Image\"\r\n                  // objectFit=\"cover\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          ) : null}\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"auto\">\r\n              <p\r\n                dangerouslySetInnerHTML={{ __html: DataQuestion.paragraph }}\r\n                className=\"paragraph\"\r\n              ></p>\r\n            </Col>\r\n          </Row>\r\n        </Row>\r\n        <Row className=\"list-question\">\r\n          {/* <Form>\r\n            <div key={`default-radio`} className=\"mb-3\">\r\n              <Form.Label className=\"question-text\">Question 1</Form.Label>\r\n              <Form.Check\r\n                type={\"radio\"}\r\n                name=\"group1\"\r\n                id={`answer-1-1`}\r\n                label={`default radio`}\r\n              />\r\n              <Form.Check\r\n                type={\"radio\"}\r\n                name=\"group1\"\r\n                id={`answer-1-2`}\r\n                label={`default radio`}\r\n              />\r\n              <Form.Check\r\n                type={\"radio\"}\r\n                name=\"group1\"\r\n                id={`answer-1-3`}\r\n                label={`default radio`}\r\n              />\r\n              <Form.Check\r\n                type={\"radio\"}\r\n                name=\"group1\"\r\n                id={`answer-1-4`}\r\n                label={`default radio`}\r\n              />\r\n            </div>\r\n          </Form> */}\r\n\r\n          <Form onSubmit={handleSubmit}>\r\n            {DataQuestion.questionList.map((item) => {\r\n              return (\r\n                <Question\r\n                  key={item.id}\r\n                  questionID={item.id}\r\n                  questionText={item.question}\r\n                  answer={item.answer}\r\n                />\r\n              );\r\n            })}\r\n            {/* <Question /> */}\r\n\r\n            <Button className=\"submit-button\" variant=\"primary\" type=\"submit\">\r\n              Next\r\n            </Button>\r\n          </Form>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizComponent;\r\n","import React from \"react\";\r\nimport Layout from \"../../Layout\";\r\nimport \"./styles.css\";\r\nimport QuizComponent from \"../../Components/QuizComponent\";\r\n// import { Grid, Card, Text } from \"@nextui-org/react\";\r\n\r\nfunction ExamView() {\r\n  const test = `refer to the following e-mail.\r\n        <br />\r\n        <br />\r\n        <b>To: </b>Vincent Silvers vsilvers@tjrprinting.com\r\n        <br />\r\n        <b>From:</b> Joseph Craig jcraig@tjrprinting.com\r\n        <br />\r\n        <b>Date:</b> June 20\r\n        <br />\r\n        <b>Subject:</b> Spelling error on Lambert posters\r\n        <br />\r\n        <br />\r\n        Hi Vincent,\r\n        <br />\r\n        <br />\r\n        It’s just come to my attention that there’s been a setback with the\r\n        Lambert project. Apparently the posters for their product launch contain\r\n        a (135)____.\r\n        <br />\r\n        The company name was typed incorrectly in the heading on the final\r\n        version. As the liaison for this client, I need you to contact Mr.\r\n        Lambert, notify him of the issue, and (136) ___ for the oversight.\r\n        <br />\r\n        Because we were responsible for this error, please reassure Mr. Lambert\r\n        that reprinting of the posters will occur at (137) ___ expense and will\r\n        be completed by the end of next week.\r\n        <br />\r\n        (138) ____.\r\n        <br />\r\n        <br />\r\n        Regards,\r\n        <br />\r\n        Joseph Craig Production Manager, TJR Printing\r\n      </p>`;\r\n  const [activeTopic, setActiveTopic] = React.useState(0);\r\n  const DataQuestion = [\r\n    {\r\n      id: \"topic1\",\r\n      audio:\r\n        \"https://storage.googleapis.com/estudyme/dev/2022/06/27/30449101.mp3\",\r\n      image:\r\n        \"https://storage.googleapis.com/kslearning/images/418922160-1620725865601-pic1.png\",\r\n      paragraph: \"\",\r\n      questionList: [\r\n        {\r\n          question: \"\",\r\n          // answer: [\"(A)\", \"(B)\", \"(C)\", \"(D)\"],\r\n          correctAnswer: \"(A)\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"topic2\",\r\n      audio: \"\",\r\n      image: \"\",\r\n      paragraph: \"\",\r\n      questionList: [\r\n        {\r\n          id: \"q1\",\r\n          question:\r\n            \"The assets of Marble Faun Publishing Company ___ last quarter when one of their main local distributors went out of business.\",\r\n          answer: [\"suffer\", \"suffers\", \"suffering\", \"suffered\"],\r\n          correctAnswer: \"suffered\",\r\n        },\r\n        {\r\n          id: \"q2\",\r\n          question:\r\n            \"lndie film director Luke Steele will be in London for the premiere of ___ new movie.\",\r\n          answer: [\"him\", \"his\", \"himself\", \"he\"],\r\n          correctAnswer: \"his\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"topic3\",\r\n      audio:\r\n        \"https://storage.googleapis.com/estudyme/dev/2022/06/27/78867473.mp3\",\r\n      image: \"\",\r\n      paragraph: \"\",\r\n      questionList: [\r\n        {\r\n          id: \"q1\",\r\n          question: \"Who is the woman?\",\r\n          answer: [\r\n            \"(A) A restaurant manager\",\r\n            \"(B) A presentation participant\",\r\n            \"(C) A workshop organizer\",\r\n            \"(D) A cook\",\r\n          ],\r\n          correctAnswer: \"(D) A cook\",\r\n        },\r\n        {\r\n          id: \"q2\",\r\n          question:\r\n            \"What does the woman mean when she says, “I have a weekly meeting soon”?\",\r\n          answer: [\r\n            \"(A) She cannot talk with the man for long.\",\r\n            \"(B) She will discuss the problem soon.\",\r\n            \"(C) She will invite the man to a weekly meeting.\",\r\n            \"(D) She will participate in the workshop next Friday.\",\r\n          ],\r\n          correctAnswer:\r\n            \"(D) She will participate in the workshop next Friday.\",\r\n        },\r\n        {\r\n          id: \"q3\",\r\n          question: \"What does Kimmy additionally want?\",\r\n          answer: [\r\n            \"(A) A cheaper price\",\r\n            \"(B) Additional food items\",\r\n            \"(C) Some alcohol\",\r\n            \"(D) Dinner menus\",\r\n          ],\r\n          correctAnswer: \"(D) Dinner menus\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"topic4\",\r\n      audio: \"\",\r\n      image: \"\",\r\n      paragraph: `${test}`,\r\n      questionList: [\r\n        {\r\n          id: \"q1\",\r\n          question: \"135\",\r\n          answer: [\r\n            \"(A) statement\",\r\n            \"(B)correction\",\r\n            \"(C)misprint\",\r\n            \"(D)location\",\r\n          ],\r\n          correctAnswer: \"(D)location\",\r\n        },\r\n        {\r\n          id: \"q2\",\r\n          question: \"136\",\r\n          answer: [\r\n            \"(A) apologizing\",\r\n            \"(B)apologized\",\r\n            \"(A) apologizes\",\r\n            \"(D)apologize\",\r\n          ],\r\n          correctAnswer: \"(D)apologize\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const HandleNextQuestion = () => {\r\n    if (activeTopic + 1 === DataQuestion.length) return;\r\n    setActiveTopic(activeTopic + 1);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"Home\">\r\n        <div className=\"Container\">\r\n          {/* <h1 className=\"HeadingText\">{\"Test\"}</h1> */}\r\n          {DataQuestion.map((item, index) => {\r\n            return (\r\n              <div\r\n                key={item.id}\r\n                className={`topic ${\r\n                  activeTopic === index ? \"Active\" : \"Inactive\"\r\n                }`}\r\n              >\r\n                <QuizComponent\r\n                  DataQuestion={item}\r\n                  HandleNextQuestion={HandleNextQuestion}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ExamView;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport Layout from \"../../Layout\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n// import { Grid, Card, Text } from \"@nextui-org/react\";\r\n\r\nfunction ToeicStructView() {\r\n  const Data = {\r\n    Listening: [\r\n      {\r\n        id: 1,\r\n        name: \"Part 1 : Mô tả hình ảnh\",\r\n        description:\r\n          \"Tương ứng với mỗi bức ảnh, bạn sẽ được nghe 04 câu mô tả về nó. Nhiệm vụ của bạn là phải chọn câu mô tả đúng nhất cho bức ảnh.\",\r\n        count: 10,\r\n        bgColor: \"#ed5c64\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Part 2 : Hỏi và Đáp\",\r\n        description:\r\n          \"Bạn sẽ nghe một câu hỏi (hoặc câu nói) và 03 lựa chọn trả lời. Nhiệm vụ của bạn là phải chọn ra câu trả lời đúng nhất trong ba đáp án A-B-C.\",\r\n        count: 30,\r\n        bgColor: \"#f49f0a\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Part 3 : Hội thoại ngắn\t\",\r\n        description:\r\n          \"Bạn sẽ nghe 10 đoạn hội thoại ngắn. Mỗi đoạn có 03 câu hỏi. Nhiệm vụ của bạn là chọn ra câu trả lời đúng nhất trong 04 đáp án của đề thi.\",\r\n        count: 30,\r\n        bgColor: \"#04AA6D\",\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"Part 4 : Đoạn thông tin ngắn\",\r\n        description:\r\n          \"Bạn sẽ nghe 10 đoạn thông tin ngắn. Mỗi đoạn có 03 câu hỏi. Nhiệm vụ của bạn là chọn ra câu trả lời đúng nhất trong số 04 đáp án được cung cấp.\",\r\n        count: 30,\r\n        bgColor: \"#f08700\",\r\n      },\r\n    ],\r\n    Reading: [\r\n      {\r\n        id: 5,\r\n        name: \"Part 5 : Hoàn thành câu\",\r\n        description: \"Bạn cần phải chọn từ đúng nhất để hoàn thành câu.\",\r\n        count: 40,\r\n        bgColor: \"#747474\",\r\n      },\r\n      {\r\n        id: 6,\r\n        name: \"Part 6 : Hoàn Thành Đoạn Văn\",\r\n        description:\r\n          \"Mỗi đoạn văn có 03 chỗ trống. Bạn phải điền từ thích hợp còn thiếu vào mỗi chỗ trống trong đoạn văn đó.\",\r\n        count: 12,\r\n        bgColor: \"#c2c120\",\r\n      },\r\n      {\r\n        id: 7,\r\n        name: \"Part 7.1 : Đọc hiểu đoạn đơn\",\r\n        description:\r\n          \"Đề thi có thể có từ 7-10 đoạn văn đơn. Hết mỗi đoạn văn sẽ có 2-5 câu hỏi.\",\r\n        count: 28,\r\n        bgColor: \"#ef4a50\",\r\n      },\r\n      {\r\n        id: 8,\r\n        name: \"Part 7.2 : Đọc hiểu đoạn kép\",\r\n        description:\r\n          \"Trong phần này sẽ có từ 04 cặp đoạn văn. Hết mỗi cặp đoạn văn sẽ có 5 câu hỏi.\",\r\n        count: 20,\r\n        bgColor: \"#00a6a6\",\r\n      },\r\n    ],\r\n  };\r\n  const Content = ({ name, description }) => {\r\n    return (\r\n      <>\r\n        <b className=\"HeadingText\">{name}</b>\r\n        <p className=\"DescriptionText\">{description}</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout title=\"Thông tin về bài thi Toeic\">\r\n      {/* <h1>About</h1> */}\r\n      <p>\r\n        Một bài thi TOEIC đầy đủ gồm hai phần thi: Phần thi Listening (nghe\r\n        hiểu) trong 45 phút và phần thi Reading (đọc hiểu) trong 75 phút. Mỗi\r\n        phần thi có 100 câu. Tổng số câu hỏi của cả hai phần thi là 200 câu.\r\n        Tổng thời gian làm bài là 120 phút hay 2 tiếng. Cấu trúc và nội dung chi\r\n        tiết của từng phần thi như sau:\r\n      </p>\r\n      <div className=\"Toeic-Struct\">\r\n        <div className=\"Container\">\r\n          <h4 className=\"HeadingText\">{\"Phần A : Listening (Nghe hiểu)\"}</h4>\r\n\r\n          <div className=\"summary-bar-container\">\r\n            {Data.Listening.map((item) => {\r\n              return (\r\n                <div\r\n                  className=\"summary-bar text-center\"\r\n                  style={{\r\n                    width: `${item.count}%`,\r\n                    backgroundColor: `${item.bgColor}`,\r\n                    maxHeight: 40,\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                  key={item.key}\r\n                >\r\n                  {item.name}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {Data.Listening.map((item) => {\r\n            return (\r\n              <Content\r\n                key={item.id}\r\n                name={item.name}\r\n                description={item.description}\r\n              />\r\n            );\r\n          })}\r\n          <h4 className=\"HeadingText\">{\"Phần B : Reading (Đọc hiểu)\"}</h4>\r\n          <div className=\"summary-bar-container\">\r\n            {Data.Reading.map((item) => {\r\n              return (\r\n                <div\r\n                  className=\"summary-bar text-center\"\r\n                  style={{\r\n                    width: `${item.count}%`,\r\n                    backgroundColor: `${item.bgColor}`,\r\n                    maxHeight: 40,\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                  key={item.key}\r\n                >\r\n                  {item.name}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {Data.Reading.map((item) => {\r\n            return (\r\n              <Content\r\n                key={item.id}\r\n                name={item.name}\r\n                description={item.description}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ToeicStructView;\r\n","// import './styles.css';\r\nimport React from \"react\";\r\nimport Layout from \"../../Layout\";\r\n// import { Grid, Card, Text } from \"@nextui-org/react\";\r\n\r\n\r\nfunction SummaryView() {\r\n  return (\r\n    <Layout title='Home'>\r\n    <h1>About</h1>\r\n    <div className=\"Home\">    \r\n      <div className='Container'>\r\n        <h3 className='HeadingText'>{'Heading'}</h3>\r\n        <p className='DescriptionText'>{'Description'}</p>\r\n      </div>\r\n    </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React from \"react\";\r\nimport About from \"./About\";\r\nimport HomeView from \"./Views/HomeView\";\r\nimport ExamView from \"./Views/ExamView\";\r\nimport ToeicStructView from \"./Views/ToeicStructView\";\r\nimport SummaryView from \"./Views/SummaryView\";\r\nimport Layout from \"./Layout.jsx\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path={\"/\"}>\r\n          <HomeView />\r\n        </Route>\r\n        <Route exact path={\"/about\"}>\r\n          <About />\r\n        </Route>\r\n        <Route exact path={\"/Home\"}>\r\n          <HomeView />\r\n        </Route>\r\n        <Route exact path={\"/Information\"}>\r\n          <ToeicStructView />\r\n        </Route>\r\n        <Route exact path={\"/Summary\"}>\r\n          <SummaryView />\r\n        </Route>\r\n        <Route exact path={\"/Exam\"}>\r\n          <ExamView />\r\n        </Route>\r\n        <Route exact path={\"/*\"}>\r\n          <HomeView />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport messages from \"./messages\";\nimport Routes from \"./Routes\";\nimport { HashRouter  as Router } from \"react-router-dom\";\n\nfunction App() {\n  const [locale, setLocale] = useState(\"en\");\n\n  return (\n    <IntlProvider locale={locale} messages={messages[locale]}>\n      <Router>\n        <Routes setLocale={setLocale} />\n      </Router>\n    </IntlProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n","module.exports = {\r\n    ar: {\r\n      title: \"رياكت پرو سايد بار\",\r\n      sidebarTitle: \"پرو سايد بار\",\r\n      description:\r\n        \"شريط جانبي مع قوائم منسدلة وعدد غير محدود من القوائم الفرعية المتداخلة\",\r\n      dashboard: \"لوحة القيادة\",\r\n      components: \"مكونات\",\r\n      dropdown: \"اسقاط\",\r\n      submenu: \"قائمة فرعية\",\r\n      multiLevel: \"متعدد المستويات\",\r\n      collapsed: \"انطوى\",\r\n      rtl: \"ر ت ل\",\r\n      image: \"صورة الخلفية\",\r\n      new: \"جديد\",\r\n      withPrefix: \"مع البادئة\",\r\n      withSuffix: \"مع اللاحقة\",\r\n      viewSource: \"عرض الكود\"\r\n    },\r\n    en: {\r\n      title: \"React Pro Sidebar\",\r\n      sidebarTitle: \"Pro Sidebar\",\r\n      description:\r\n        \"React sidebar library with dropdown menus and unlimited number of nested submenus\",\r\n      dashboard: \"Dashboard\",\r\n      components: \"Components\",\r\n      dropdown: \"Dropdown\",\r\n      submenu: \"Submenu\",\r\n      multiLevel: \"Multi Level\",\r\n      collapsed: \"Collapsed\",\r\n      rtl: \"RTL\",\r\n      image: \"Background image\",\r\n      new: \"NEW\",\r\n      withPrefix: \"With Prefix\",\r\n      withSuffix: \"With Suffix\",\r\n      viewSource: \"View Source\"\r\n    }\r\n  };\r\n  "],"sourceRoot":""}