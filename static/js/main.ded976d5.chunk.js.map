{"version":3,"sources":["Header.jsx","Aside.jsx","Layout.jsx","About.jsx","Views/HomeView/index.jsx","Components/QuizComponent/index.jsx","Views/ExamView/index.jsx","Views/ToeicStructView/index.jsx","Views/SummaryView/index.jsx","Routes.jsx","App.js","index.js","messages.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","style","background","position","Toolbar","onClick","handleToggleSidebar","Typography","variant","IconButton","event","currentTarget","color","Menu","id","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem","Aside","rtl","toggled","handleCollapseSidebar","collapse","useIntl","useHistory","useLocation","breakPoint","collapsed","onToggle","iconShape","icon","exact","to","textAlign","Layout","setToggled","setCollapse","value","children","About","HomeView","Button","display","QuizComponent","HandleNextQuestion","DataQuestion","audioRef","useRef","Container","Row","audio","Col","md","ref","controls","src","type","image","Image","width","height","alt","dangerouslySetInnerHTML","__html","paragraph","Form","onSubmit","preventDefault","current","pause","questionList","map","item","Group","controlId","Label","question","answer","itemAnswer","index","Check","name","label","ExamView","data","expiryTimestamp","Date","setHours","getHours","useTimer","autoStart","onExpire","console","warn","seconds","minutes","hours","start","days","isRunning","resume","restart","activeTopic","setActiveTopic","isStart","setIsStart","HandleStart","length","TestInforCard","Card","padding","backgroundColor","Img","Body","Title","Text","filter","parentId","hasChild","childCards","item2","_id","text","texts","choices","sort","a","b","slice","correctAnswer","sound","ToeicStructView","Data","Listening","description","count","bgColor","Reading","Content","maxHeight","overflow","key","SummaryView","Headings","headings","activeId","heading","href","e","document","querySelector","scrollIntoView","behavior","split","items","child","getNestedHeadings","headingElements","nestedHeadings","forEach","innerText","nodeName","push","TableOfContents","setActiveId","setNestedHeadings","useEffect","Array","from","querySelectorAll","newNestedHeadings","useHeadingsData","headingElementsRef","observer","IntersectionObserver","reduce","headingElement","target","visibleHeadings","Object","keys","isIntersecting","getIndexFromId","findIndex","sortedVisibleHeadings","log","rootMargin","element","observe","disconnect","useIntersectionObserver","DummyText","fluid","Routes","path","App","locale","setLocale","messages","rootElement","getElementById","ReactDOM","render","module","exports","ar","sidebarTitle","dashboard","components","dropdown","submenu","multiLevel","new","withPrefix","withSuffix","viewSource","en"],"mappings":"yYAWMA,EAAYC,aAAW,SAACC,GAAK,MAAM,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAEb,IA2DcK,EAzDA,SAACC,GACd,IAAMC,EAAUX,IAChB,EAAgCY,IAAMC,SAAS,MAAK,mBAA7CC,EAAQ,KAAEC,EAAW,KACtBC,EAAOC,QAAQH,GAMfI,EAAc,WAClBH,EAAY,KACd,EACA,OACE,iCACE,qBAAKI,UAAWR,EAAQR,KAAK,SAC3B,cAACiB,EAAA,EAAM,CAACC,MAAO,CAAEC,WAAY,WAAaC,SAAS,SAAQ,SACzD,eAACC,EAAA,EAAO,WACN,qBACEL,UAAS,qBAAgBR,EAAQN,YACjCoB,QAAS,kBAAMf,EAAMgB,qBAAoB,EAAK,EAAC,SAE/C,cAAC,IAAM,MAET,cAACC,EAAA,EAAU,CAACC,QAAQ,KAAKT,UAAWR,EAAQH,MAAM,SAC/CE,EAAMF,OAAS,uBAGlB,gCACE,cAACqB,EAAA,EAAU,CACT,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdJ,QA3BK,SAACK,GAClBf,EAAYe,EAAMC,cACpB,EA0BcC,MAAM,UAAS,SAEf,cAAC,IAAa,MAEhB,eAACC,EAAA,EAAI,CACHC,GAAG,cACHpB,SAAUA,EACVqB,mBAAoB,KACpBC,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChDC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,QAChDtB,KAAMA,EACNwB,QAAStB,EAAY,UAErB,cAACuB,EAAA,EAAQ,CAAChB,QAASP,EAAY,qBAC/B,cAACuB,EAAA,EAAQ,CAAChB,QAASP,EAAY,sCAQ/C,E,0CC0GewB,EAjKD,SAAH,GAMJ,IALLC,EAAG,EAAHA,IACAC,EAAO,EAAPA,QACAlB,EAAmB,EAAnBA,oBACAmB,EAAqB,EAArBA,sBACAC,EAAQ,EAARA,SAEaC,cACGC,cACCC,cAGjB,OACE,eAAC,IAAU,CACTN,IAAKA,EACLC,QAASA,EACTM,WAAW,KACXC,UAAYP,GAAsBA,EAAZE,EACtBM,SAAU1B,EAAoB,UAE9B,cAAC,IAAa,UACZ,qBAAKP,UAAU,iBAAgB,SAY5ByB,GACC,wBAAQnB,QAAS,kBAAMoB,GAAuBC,EAAS,EAAC,SACrDA,EAAW,oBAAY,qBAMhC,cAAC,IAAc,UACb,eAAC,IAAI,CAACO,UAAU,SAAQ,UACtB,cAAC,IAAQ,CACPC,KAAM,cAAC,IAAe,IAKtB,SAEA,cAAC,IAAO,CAACC,OAAK,EAACC,GAAI,IAAI,oBAKzB,cAAC,IAAQ,CAACF,KAAM,cAAC,IAAK,IAAI,SACxB,cAAC,IAAO,CAACC,OAAK,EAACC,GAAI,eAAe,qDAOpC,cAAC,IAAQ,CAACF,KAAM,cAAC,IAAK,IAAI,SACxB,cAAC,IAAO,CAACC,OAAK,EAACC,GAAI,WAAW,kDAOhC,cAAC,IAAQ,CAACF,KAAM,cAAC,IAAK,IAAI,SACxB,cAAC,IAAO,CAACC,OAAK,EAACC,GAAI,QAAQ,uCAkEjC,cAAC,IAAa,CAACnC,MAAO,CAAEoC,UAAW,cAoBzC,EC7IeC,MApCf,SAAgBhD,GACd,MAAsBG,oBAAS,GAAM,mBAA9B8B,EAAG,KACV,GADkB,KACY9B,oBAAS,IAAM,mBAAtC+B,EAAO,KAAEe,EAAU,KAC1B,EAAgC/C,IAAMC,UAAS,GAAM,mBAA9CiC,EAAQ,KAAEc,EAAW,KAQtBlC,GAPOqB,cAOe,SAACc,GAC3BF,EAAWE,EACb,GAKA,OACE,sBAAK1C,UAAS,cAASwB,EAAM,MAAQ,GAAE,YAAIC,EAAU,UAAY,IAAK,UACpE,cAAC,EAAK,CACJV,GAAI,UACJS,IAAKA,EACLC,QAASA,EACTE,SAAUA,EACVpB,oBAAqBA,EACrBmB,sBAZwB,SAACgB,GAC7BD,EAAYC,EACd,IAYI,uBAAM1C,UAAS,eAAU2B,EAAW,gBAAkB,gBAAiB,UACrE,cAAC,EAAM,CAACtC,MAAOE,EAAMF,MAAOkB,oBAAqBA,IACjD,qBAAKP,UAAU,cAAa,SAAET,EAAMoD,gBAI5C,EC5BeC,EARD,WACZ,OACE,cAAC,EAAM,UACL,wCAGN,E,kBCuBeC,MAzBf,WACE,OACE,eAAC,EAAM,CAACxD,MAAM,OAAM,UAClB,uCACA,qBAAKW,UAAU,OAAM,SACnB,sBAAKA,UAAU,YAAW,UACxB,oBAAIA,UAAU,cAAa,SAAE,4CAC7B,mBAAGA,UAAU,kBAAiB,SAAE,mCAEhC,cAAC8C,EAAA,EAAM,CACL5C,MAAO,CAAE6C,QAAS,gBAClB/C,UAAU,SACVS,QAAQ,UACR,SAEA,cAAC,IAAO,CAACT,UAAW,cAAeoC,OAAK,EAACC,GAAI,QAAQ,8CAQjE,E,oECyIeW,MAlKf,SAAuB,GAAuC,IAArCC,EAAkB,EAAlBA,mBAAoBC,EAAY,EAAZA,aACrCC,EAAWC,iBAAO,MA6CxB,OACE,mCAEE,eAACC,EAAA,EAAS,CAACrD,UAAU,OAAM,UACzB,eAACsD,EAAA,EAAG,CAACtD,UAAU,QAAO,UACnBkD,EAAaK,MACZ,cAACD,EAAA,EAAG,CAACtD,UAAU,4BAA2B,SACxC,cAACwD,EAAA,EAAG,CAACC,GAAG,OAAM,SACZ,uBAAOC,IAAKP,EAAUQ,UAAQ,WAC5B,wBAAQC,IAAKV,EAAaK,MAAOM,KAAK,qBAI1C,KACHX,EAAaY,MACZ,cAACR,EAAA,EAAG,CAACtD,UAAU,4BAA2B,SACxC,cAACwD,EAAA,EAAG,CAACC,GAAG,OAAM,SACZ,cAACM,EAAA,EAAK,CACJC,MAAM,MACNC,OAAO,MACPL,IAAKV,EAAaY,MAClBI,IAAI,sBAKR,KACJ,cAACZ,EAAA,EAAG,CAACtD,UAAU,4BAA2B,SACxC,cAACwD,EAAA,EAAG,CAACC,GAAG,OAAM,SACZ,mBACEU,wBAAyB,CAAEC,OAAQlB,EAAamB,WAChDrE,UAAU,qBAKlB,cAACsD,EAAA,EAAG,CAACtD,UAAU,gBAAe,SA+B5B,eAACsE,EAAA,EAAI,CAACC,SAzEO,WAAO,IAAD,EACzB5D,MAAM6D,iBACU,QAAhB,EAAArB,EAASsB,eAAO,OAAhB,EAAkBC,QAClBzB,GACF,EAqEqC,UAC1BC,EAAayB,aAAaC,KAAI,SAACC,GAC9B,OACE,eAACP,EAAA,EAAKQ,MAAK,CACTC,UAAS,UAAK7B,EAAanC,GAAE,YAAI8D,EAAK9D,IAEtCf,UAAU,OAAM,UAEhB,cAACsE,EAAA,EAAKU,MAAK,CAAChF,UAAU,gBAAe,SAClC6E,EAAKI,WAEPJ,EAAKK,OAAON,KAAI,SAACO,EAAYC,GAC5B,OACE,cAACd,EAAA,EAAKe,MAAK,CAETxB,KAAM,QACNyB,KAAI,gBAAWT,EAAK9D,IACpBA,GAAE,iBAAY8D,EAAK9D,GAAE,YAAIqE,EAAQ,GACjCG,MAAOJ,GAAW,iBAJHN,EAAK9D,GAAE,YAAIqE,EAAQ,GAaxC,MAAE,UAtBMlC,EAAanC,GAAE,YAAI8D,EAAK9D,IA+BtC,IAGA,cAAC+B,EAAA,EAAM,CAAC9C,UAAU,gBAAgBS,QAAQ,UAAUoD,KAAK,SAAQ,2BAQ7E,E,yBCoJe2B,MA/Sf,WACE,IAmDqBC,EAnDjBC,GAAkB,IAAIC,MAAOC,UAAS,IAAID,MAAOE,WAAa,GAClE,EAUIC,mBAAS,CACXC,WAAW,EACXL,kBACAM,SAAU,kBAAMC,QAAQC,KAAK,kBAAkB,IAZ/CC,EAAO,EAAPA,QACAC,EAAO,EAAPA,QACAC,EAAK,EAALA,MAGAC,GAFI,EAAJC,KACS,EAATC,UACK,EAALF,OA2CF,GA1CO,EAAL5B,MACM,EAAN+B,OACO,EAAPC,QAwCoCjH,IAAMC,SAAS,IAAE,mBAAhDiH,EAAW,KAAEC,EAAc,KA8JlC,GA3Bc,GAAD,OArKH,qtCAgMoBnH,IAAMC,UAAS,IAAM,mBAA5CmH,EAAO,KAAEC,EAAU,KACpBC,EAAc,WAClBT,IACAQ,GAAYD,EACd,EACM5D,EAAqB,WACrB0D,EAAc,IAAMlB,EAAKuB,QAC7BJ,EAAeD,EAAc,EAC/B,EACMM,EAAgB,WACpB,OACE,eAAC3D,EAAA,EAAG,WACF,cAACE,EAAA,EAAG,IAEJ,cAACA,EAAA,EAAG,UACF,eAAC0D,EAAA,EAAI,CACHlH,UAAU,cACVE,MAAO,CACL8D,MAAO,QACPmD,QAAS,OACTC,gBAAiB,WACjB,UAEF,cAACF,EAAA,EAAKG,IAAG,CACP5G,QAAQ,MACRmD,IAAI,qEAEN,eAACsD,EAAA,EAAKI,KAAI,WACR,cAACJ,EAAA,EAAKK,MAAK,0CACX,eAACL,EAAA,EAAKM,KAAI,mEACmB,uBAAM,kDACA,0BAEnC,cAAC1E,EAAA,EAAM,CACL5C,MACE2G,EAAU,CAAE9D,QAAS,QAAW,CAAEA,QAAS,gBAE7C/C,UAAU,SACVS,QAAQ,UACRH,QAASyG,EAAY,yDAO7B,cAACvD,EAAA,EAAG,MAGV,EAEA,OACE,cAAC,EAAM,UACL,qBAAKxD,UAAU,OAAM,SACnB,cAACqD,EAAA,EAAS,CAACrD,UAAU,YAAW,SAE7B6G,EACC,qCACE,eAACvD,EAAA,EAAG,WACF,cAACE,EAAA,EAAG,IACJ,cAACA,EAAA,EAAG,IACJ,cAACA,EAAA,EAAG,UACF,oBAAGxD,UAAU,wBAAuB,UACjCqG,EAAK,IAAGD,EAAO,IAAGD,UAIzB,cAAC7C,EAAA,EAAG,WAhOKmC,EAiOMA,EAhOXA,EAAKgC,QACjB,SAAC5C,GAAI,MAAsB,4BAAjBA,EAAK6C,QAAsC,IAEnC9C,KAAI,SAACC,EAAMO,GAC7B,IAAIT,EAmCJ,OAhCEA,EAFmB,GAAjBE,EAAK8C,SACM9C,EAAK+C,WACEhD,KAAI,SAACiD,GASvB,MAR2B,CACzB9G,GAAI8G,EAAMC,IAAM,IAAM1C,EACtBH,SAAU4C,EAAM5C,SAAS8C,KACzB7C,OAAQ,sBAAI2C,EAAM3C,OAAO8C,OAAK,YAAKH,EAAM3C,OAAO+C,UAASC,MACvD,SAACC,EAAGC,GAAC,OAAKA,EAAEC,MAAM,EAAG,GAAKF,EAAEE,MAAM,EAAG,EAAE,IAEzCC,cAAeT,EAAM3C,OAAO8C,MAAM,GAGtC,IAEe,CACb,CACEjH,GAAI8D,EAAKiD,IAAM,IAAM1C,EACrBH,SAAUJ,EAAKI,SAAS8C,KACxB7C,OAAQ,sBAAIL,EAAKK,OAAO8C,OAAK,YAAKnD,EAAKK,OAAO+C,UAASC,MACrD,SAACC,EAAGC,GAAC,OAAMA,EAAEC,MAAM,EAAG,GAAKF,EAAEE,MAAM,EAAG,GAAK,GAAK,CAAC,IAEnDC,cAAezD,EAAKK,OAAO8C,MAAM,KAIpB,CACjBjH,GAAI8D,EAAKiD,IAAM,IAAM1C,EACrB7B,MAAOsB,EAAKI,SAASsD,MAAQ1D,EAAKI,SAASsD,MAAQ,KACnDzE,MAAOe,EAAKI,SAASnB,MAAK,yCACYe,EAAKI,SAASnB,OAChD,GACJO,UAAWQ,EAAKI,SAAS8C,KACzBpD,aAAcA,EAGlB,KAwL+BC,KAAI,SAACC,EAAMO,GAC5B,OACE,qBAEEpF,UAAS,gBACP2G,IAAgBvB,EAAQ,SAAW,YAClC,SAEH,cAAC,EAAa,CACZlC,aAAc2B,EACd5B,mBAAoBA,KAPjB4B,EAAK9D,GAWhB,SAIJ,cAACkG,EAAa,SAM1B,E,OCtJeuB,MA1Jf,WACE,IAAMC,EAAO,CACXC,UAAW,CACT,CACE3H,GAAI,EACJuE,KAAM,0CACNqD,YACE,mRACFC,MAAO,GACPC,QAAS,WAEX,CACE9H,GAAI,EACJuE,KAAM,sCACNqD,YACE,8QACFC,MAAO,GACPC,QAAS,WAEX,CACE9H,GAAI,EACJuE,KAAM,2CACNqD,YACE,yRACFC,MAAO,GACPC,QAAS,WAEX,CACE9H,GAAI,EACJuE,KAAM,iDACNqD,YACE,kSACFC,MAAO,GACPC,QAAS,YAGbC,QAAS,CACP,CACE/H,GAAI,EACJuE,KAAM,mCACNqD,YAAa,6GACbC,MAAO,GACPC,QAAS,WAEX,CACE9H,GAAI,EACJuE,KAAM,oDACNqD,YACE,6NACFC,MAAO,GACPC,QAAS,WAEX,CACE9H,GAAI,EACJuE,KAAM,kEACNqD,YACE,yKACFC,MAAO,GACPC,QAAS,WAEX,CACE9H,GAAI,EACJuE,KAAM,2DACNqD,YACE,wKACFC,MAAO,GACPC,QAAS,aAITE,EAAU,SAAH,GAA+B,IAAzBzD,EAAI,EAAJA,KAAMqD,EAAW,EAAXA,YACvB,OACE,qCACE,mBAAG3I,UAAU,cAAa,SAAEsF,IAC5B,mBAAGtF,UAAU,kBAAiB,SAAE2I,MAGtC,EAEA,OACE,eAAC,EAAM,CAACtJ,MAAM,wCAA4B,UAExC,giBAOA,qBAAKW,UAAU,eAAc,SAC3B,sBAAKA,UAAU,YAAW,UACxB,oBAAIA,UAAU,cAAa,SAAE,6CAE7B,qBAAKA,UAAU,wBAAuB,SACnCyI,EAAKC,UAAU9D,KAAI,SAACC,GACnB,OACE,qBACE7E,UAAU,0BACVE,MAAO,CACL8D,MAAM,GAAD,OAAKa,EAAK+D,MAAK,KACpBxB,gBAAgB,GAAD,OAAKvC,EAAKgE,SACzBG,UAAW,GACXC,SAAU,UACV,SAGDpE,EAAKS,MAFDT,EAAKqE,IAKhB,MAEDT,EAAKC,UAAU9D,KAAI,SAACC,GACnB,OACE,cAACkE,EAAO,CAENzD,KAAMT,EAAKS,KACXqD,YAAa9D,EAAK8D,aAFb9D,EAAK9D,GAKhB,IACA,oBAAIf,UAAU,cAAa,SAAE,oDAC7B,qBAAKA,UAAU,wBAAuB,SACnCyI,EAAKK,QAAQlE,KAAI,SAACC,GACjB,OACE,qBACE7E,UAAU,0BACVE,MAAO,CACL8D,MAAM,GAAD,OAAKa,EAAK+D,MAAK,KACpBxB,gBAAgB,GAAD,OAAKvC,EAAKgE,SACzBG,UAAW,GACXC,SAAU,UACV,SAGDpE,EAAKS,MAFDT,EAAKqE,IAKhB,MAEDT,EAAKK,QAAQlE,KAAI,SAACC,GACjB,OACE,cAACkE,EAAO,CAENzD,KAAMT,EAAKS,KACXqD,YAAa9D,EAAK8D,aAFb9D,EAAK9D,GAKhB,WAKV,E,OCkLeoI,MA3Uf,WAKE,IAAMC,EAAW,SAAH,OAAMC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,OACpC,6BACGD,EAASzE,KAAI,SAAC2E,GAAO,OACpB,qBAEEvJ,UAAWuJ,EAAQxI,KAAOuI,EAAW,SAAW,GAAG,UAEnD,mBACEE,KAAI,WAAMD,EAAQxI,IAClBT,QAAS,SAACmJ,GACRA,EAAEjF,iBACFkF,SAASC,cAAc,IAAD,OAAKJ,EAAQxI,KAAM6I,eAAe,CACtDC,SAAU,UAEd,EAAE,SAEDN,EAAQlK,MAAMyK,MAAM,KAAK,KAE3BP,EAAQQ,MAAM/C,OAAS,GACtB,6BACGuC,EAAQQ,MAAMnF,KAAI,SAACoF,GAAK,OACvB,oBAEEhK,UAAWgK,EAAMjJ,KAAOuI,EAAW,SAAW,GAAG,SAEjD,mBACEE,KAAI,WAAMQ,EAAMjJ,IAChBT,QAAS,SAACmJ,GACRA,EAAEjF,iBACFkF,SAASC,cAAc,IAAD,OAAKK,EAAMjJ,KAAM6I,eAAe,CACpDC,SAAU,UAEd,EAAE,SAEDG,EAAM3K,MAAMyK,MAAM,KAAK,MAZrBE,EAAMjJ,GAcR,QAhCNwI,EAAQxI,GAoCV,KAEJ,EAsBDkJ,EAAoB,SAACC,GACzB,IAAMC,EAAiB,GAevB,OAbAD,EAAgBE,SAAQ,SAACb,EAASnE,GAChC,IAAmB/F,EAAckK,EAAzBc,UAAkBtJ,EAAOwI,EAAPxI,GAED,OAArBwI,EAAQe,SACVH,EAAeI,KAAK,CAAExJ,KAAI1B,QAAO0K,MAAO,KACV,OAArBR,EAAQe,UAAqBH,EAAenD,OAAS,GAC9DmD,EAAeA,EAAenD,OAAS,GAAG+C,MAAMQ,KAAK,CACnDxJ,KACA1B,SAGN,IAEO8K,CACT,EAoDMK,EAAkB,WACtB,MAAgC/K,IAAMC,WAAU,mBAAzC4J,EAAQ,KAAEmB,EAAW,KAC5B,EAvFsB,WACtB,MAA4ChL,IAAMC,SAAS,IAAG,mBAAvDyK,EAAc,KAAEO,EAAiB,KAYxC,OAVAjL,IAAMkL,WAAU,WACd,IAAMT,EAAkBU,MAAMC,KAC5BnB,SAASoB,iBAAiB,qBAItBC,EAAoBd,EAAkBC,GAC5CQ,EAAkBK,EACpB,GAAG,IAEI,CAAEZ,iBACX,CAyE6Ba,GAAnBb,EAAc,EAAdA,eAGR,OAvD8B,SAACM,GAC/B,IAAMQ,EAAqBxL,IAAM2D,OAAO,CAAC,GACzC3D,IAAMkL,WAAU,WACd,IA+BMO,EAAW,IAAIC,sBA/BJ,SAAC9B,GAChB4B,EAAmBxG,QAAU4E,EAAS+B,QAAO,SAACxG,EAAKyG,GAEjD,OADAzG,EAAIyG,EAAeC,OAAOvK,IAAMsK,EACzBzG,CACT,GAAGqG,EAAmBxG,SAGtB,IAAM8G,EAAkB,GACxBC,OAAOC,KAAKR,EAAmBxG,SAAS2F,SAAQ,SAAClB,GAC/C,IAAMmC,EAAiBJ,EAAmBxG,QAAQyE,GAC9CmC,EAAeK,gBACjBH,EAAgBhB,KAAKc,EACzB,IAEA,IAAMM,EAAiB,SAAC5K,GAAE,OACxBmJ,EAAgB0B,WAAU,SAACrC,GAAO,OAAKA,EAAQxI,KAAOA,CAAE,GAAE,EAG5D,GAA+B,IAA3BwK,EAAgBvE,OAClByD,EAAYc,EAAgB,GAAGD,OAAOvK,SAGjC,GAAIwK,EAAgBvE,OAAS,EAAG,CACrC,IAAM6E,EAAwBN,EAAgBrD,MAC5C,SAACC,EAAGC,GAAC,OAAKuD,EAAexD,EAAEmD,OAAOvK,IAAM4K,EAAevD,EAAEkD,OAAOvK,GAAG,IAErEkF,QAAQ6F,IAAID,GACZpB,EAAYoB,EAAsB,GAAGP,OAAOvK,GAC9C,CACF,GAEoD,CAClD/B,KAAM0K,SAASC,cAAc,UAC7BoC,WAAY,QAGR7B,EAAkBU,MAAMC,KAAKnB,SAASoB,iBAAiB,WAI7D,OAFAZ,EAAgBE,SAAQ,SAAC4B,GAAO,OAAKd,EAASe,QAAQD,EAAQ,IAEvD,kBAAMd,EAASgB,YAAa,CACrC,GAAG,CAACzB,GACN,CAQE0B,CAAwB1B,GACxBxE,QAAQ6F,IAAIxC,GAEV,qBAAKtJ,UAAU,UAAU,aAAW,oBAAmB,SACrD,cAACoJ,EAAQ,CAACC,SAAUc,EAAgBb,SAAUA,KAGpD,EACM8C,EAAY,MAClB,OACE,cAAC,EAAM,CAAC/M,MAAM,mDAA8B,SAC1C,cAACgE,EAAA,EAAS,CAACrD,UAAU,oBAAmB,SACtC,eAACsD,EAAA,EAAG,WACF,cAACE,EAAA,EAAG,CAACC,GAAG,OAAM,SACZ,uBAAMzD,UAAU,UAAS,UACvB,oBAAIe,GAAG,gBAAe,+CACtB,82BAUA,oBAAIA,GAAG,iBAAgB,+DACvB,oBAAIA,GAAG,iBAAgB,qEACvB,oBAAIA,GAAG,iBAAgB,kEACvB,oBAAIA,GAAG,iBAAgB,qFAGvB,oBAAIA,GAAG,iBAAgB,4DACvB,oBAAIA,GAAG,iBAAgB,kEACvB,oBAAIA,GAAG,iBAAgB,+DACvB,oBAAIA,GAAG,iBAAgB,kFAGvB,oBAAIA,GAAG,iBAAgB,gEACvB,oBAAIA,GAAG,kBAAiB,oEACxB,oBAAIA,GAAG,kBAAiB,uFAGxB,oBAAIA,GAAG,kBAAiB,uEACxB,cAACgD,EAAA,EAAK,CACJsI,OAAO,EACPzI,IAAI,+EAEN,oBAAI7C,GAAG,gBAAe,oHAItB,mxBASA,oBAAIA,GAAG,qBAAoB,8EAG3B,4uBAQA,cAACgD,EAAA,EAAK,CACJsI,OAAO,EACPzI,IAAI,6FAEN,oBAAI7C,GAAG,oBAAmB,gDAC1B,8uBASA,4BAAIqL,IACJ,4BAAIA,IACJ,4BAAIA,IACJ,oBAAIrL,GAAG,iBAAgB,8DACvB,gxBAQA,4BAAIqL,IACJ,oBAAIrL,GAAG,iBAAgB,4HAGvB,4BAAIqL,IACJ,oBAAIrL,GAAG,YAAW,uDAClB,2wBAQA,oBAAIA,GAAG,gBAAe,oDACtB,u9BAUA,oBAAIA,GAAG,iBAAgB,gMAIvB,qXAKA,0YAKA,oBAAIA,GAAG,qBAAoB,6DAC3B,0lBAOA,oBAAIA,GAAG,kBAAiB,8GAIxB,ydAMA,oBAAIA,GAAG,eAAc,oEACrB,qYAQJ,cAACyC,EAAA,EAAG,CAACC,GAAG,OAAM,SACZ,cAAC+G,EAAe,YAuB5B,ECxSe8B,EA9BA,WACb,OACE,mCACE,eAAC,IAAM,WACL,cAAC,IAAK,CAAClK,OAAK,EAACmK,KAAM,IAAI,SACrB,cAAC,EAAQ,MAEX,cAAC,IAAK,CAACnK,OAAK,EAACmK,KAAM,SAAS,SAC1B,cAAC,EAAK,MAER,cAAC,IAAK,CAACnK,OAAK,EAACmK,KAAM,QAAQ,SACzB,cAAC,EAAQ,MAEX,cAAC,IAAK,CAACnK,OAAK,EAACmK,KAAM,eAAe,SAChC,cAAC,EAAe,MAElB,cAAC,IAAK,CAACnK,OAAK,EAACmK,KAAM,WAAW,SAC5B,cAAC,EAAW,MAEd,cAAC,IAAK,CAACnK,OAAK,EAACmK,KAAM,QAAQ,SACzB,cAAC,EAAQ,MAEX,cAAC,IAAK,CAACnK,OAAK,EAACmK,KAAM,KAAK,SACtB,cAAC,EAAQ,UAKnB,ECnBeC,MAZf,WACE,MAA4B9M,mBAAS,MAAK,mBAAnC+M,EAAM,KAAEC,EAAS,KAExB,OACE,cAAC,IAAY,CAACD,OAAQA,EAAQE,SAAUA,IAASF,GAAQ,SACvD,cAAC,IAAM,UACL,cAAC,EAAM,CAACC,UAAWA,OAI3B,ECTME,EAAclD,SAASmD,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAU,UACT,cAAC,EAAG,MAENH,E,+m2NCZFI,EAAOC,QAAU,CACbC,GAAI,CACF7N,MAAO,gGACP8N,aAAc,iEACdxE,YACE,gXACFyE,UAAW,sEACXC,WAAY,uCACZC,SAAU,iCACVC,QAAS,gEACTC,WAAY,wFACZxL,UAAW,iCACXR,IAAK,uBACLsC,MAAO,sEACP2J,IAAK,2BACLC,WAAY,0DACZC,WAAY,0DACZC,WAAY,qDAEdC,GAAI,CACFxO,MAAO,oBACP8N,aAAc,cACdxE,YACE,oFACFyE,UAAW,YACXC,WAAY,aACZC,SAAU,WACVC,QAAS,UACTC,WAAY,cACZxL,UAAW,YACXR,IAAK,MACLsC,MAAO,mBACP2J,IAAK,MACLC,WAAY,cACZC,WAAY,cACZC,WAAY,e","file":"static/js/main.ded976d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <header>\r\n      <div className={classes.root}>\r\n        <AppBar style={{ background: \"#7b1e5c\" }} position=\"static\">\r\n          <Toolbar>\r\n            <div\r\n              className={`btn-toggle ${classes.menuButton}`}\r\n              onClick={() => props.handleToggleSidebar(true)}\r\n            >\r\n              <FaBars />\r\n            </div>\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              {props.title || \"Thi thử Toeic\"}\r\n            </Typography>\r\n\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n                transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu,\r\n  SidebarHeader,\r\n  SidebarFooter,\r\n  SidebarContent,\r\n} from \"react-pro-sidebar\";\r\nimport {\r\n  FaTachometerAlt,\r\n  FaGem,\r\n  FaList,\r\n  FaGithub,\r\n  FaRegLaughWink,\r\n  FaHeart,\r\n} from \"react-icons/fa\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst Aside = ({\r\n  rtl,\r\n  toggled,\r\n  handleToggleSidebar,\r\n  handleCollapseSidebar,\r\n  collapse,\r\n}) => {\r\n  const intl = useIntl();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  // const [collapse,setCollapse]=React.useState(true);\r\n\r\n  return (\r\n    <ProSidebar\r\n      rtl={rtl}\r\n      toggled={toggled}\r\n      breakPoint=\"md\"\r\n      collapsed={!toggled ? collapse : !toggled}\r\n      onToggle={handleToggleSidebar}\r\n    >\r\n      <SidebarHeader>\r\n        <div className=\"sidebar-header\">\r\n          {/* <p className=\"user-name text-white mb-2\">John Doe</p>\r\n          <p className=\"user-email\">johndoe@withinpixels.com</p>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"position-absolute bottom-0\">\r\n              <img\r\n                src=\"./assets/images/user.jpg\"\r\n                alt=\"User profile\"\r\n                className=\"user-image\"\r\n              />\r\n            </div>\r\n          </div> */}\r\n          {toggled || (\r\n            <button onClick={() => handleCollapseSidebar(!collapse)}>\r\n              {collapse ? \"Mở rộng\" : \"Thu nhỏ\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </SidebarHeader>\r\n\r\n      <SidebarContent>\r\n        <Menu iconShape=\"circle\">\r\n          <MenuItem\r\n            icon={<FaTachometerAlt />}\r\n            // suffix={\r\n            //   <span className=\"badge red\">\r\n            //     {intl.formatMessage({ id: \"new\" })}\r\n            //   </span>\r\n            // }\r\n          >\r\n            <NavLink exact to={\"/\"}>\r\n              Home\r\n              {/* {intl.formatMessage({ id: \"dashboard\" })} */}\r\n            </NavLink>\r\n          </MenuItem>\r\n          <MenuItem icon={<FaGem />}>\r\n            <NavLink exact to={\"/Information\"}>\r\n              Thông tin về bài thi Toeic\r\n              {/* {intl.formatMessage({ id: \"dashboard\" })} */}\r\n            </NavLink>\r\n            {/* {\" \"}\r\n            {intl.formatMessage({ id: \"components\" })} */}\r\n          </MenuItem>\r\n          <MenuItem icon={<FaGem />}>\r\n            <NavLink exact to={\"/Summary\"}>\r\n              Ôn tập kiến thức\r\n              {/* {intl.formatMessage({ id: \"dashboard\" })} */}\r\n            </NavLink>\r\n            {/* {\" \"}\r\n            {intl.formatMessage({ id: \"components\" })} */}\r\n          </MenuItem>\r\n          <MenuItem icon={<FaGem />}>\r\n            <NavLink exact to={\"/Exam\"}>\r\n              Thi thử Toeic\r\n              {/* {intl.formatMessage({ id: \"dashboard\" })} */}\r\n            </NavLink>\r\n            {/* {\" \"}\r\n            {intl.formatMessage({ id: \"components\" })} */}\r\n          </MenuItem>\r\n        </Menu>\r\n        {/* <Menu iconShape=\"circle\">\r\n          <SubMenu\r\n            suffix={<span className=\"badge yellow\">3</span>}\r\n            title={intl.formatMessage({ id: \"withSuffix\" })}\r\n            icon={<FaRegLaughWink />}\r\n            data-element={location.pathname}\r\n          >\r\n            <MenuItem>\r\n              <NavLink exact to={\"/about\"}>\r\n                {intl.formatMessage({ id: \"submenu\" })} About\r\n              </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>\r\n              <NavLink exact to={\"/\"}>\r\n                {intl.formatMessage({ id: \"submenu\" })} Home 2\r\n              </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 3</MenuItem>\r\n          </SubMenu>\r\n          <SubMenu\r\n            prefix={<span className=\"badge gray\">3</span>}\r\n            title={intl.formatMessage({ id: \"withPrefix\" })}\r\n            icon={<FaHeart />}\r\n            data-element={location.pathname}\r\n          >\r\n            <MenuItem>\r\n              <NavLink exact to={\"/\"}>\r\n                {intl.formatMessage({ id: \"submenu\" })} 1 Home\r\n              </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 2</MenuItem>\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 3</MenuItem>\r\n          </SubMenu>\r\n          <SubMenu\r\n            title={intl.formatMessage({ id: \"multiLevel\" })}\r\n            icon={<FaList />}\r\n          >\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 1 </MenuItem>\r\n            <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 2 </MenuItem>\r\n            <SubMenu title={`${intl.formatMessage({ id: \"submenu\" })} 3`}>\r\n              <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 3.1 </MenuItem>\r\n              <MenuItem>{intl.formatMessage({ id: \"submenu\" })} 3.2 </MenuItem>\r\n              <SubMenu title={`${intl.formatMessage({ id: \"submenu\" })} 3.3`}>\r\n                <MenuItem>\r\n                  {intl.formatMessage({ id: \"submenu\" })} 3.3.1{\" \"}\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  {intl.formatMessage({ id: \"submenu\" })} 3.3.2{\" \"}\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  {intl.formatMessage({ id: \"submenu\" })} 3.3.3{\" \"}\r\n                </MenuItem>\r\n              </SubMenu>\r\n            </SubMenu>\r\n          </SubMenu>\r\n        </Menu> */}\r\n      </SidebarContent>\r\n\r\n      <SidebarFooter style={{ textAlign: \"center\" }}>\r\n        {/* <div\r\n          className=\"sidebar-btn-wrapper\"\r\n          style={{\r\n            padding: \"20px 24px\"\r\n          }}\r\n        >\r\n          <a\r\n            href=\"https://github.com/azouaoui-med/react-pro-sidebar\"\r\n            target=\"_blank\"\r\n            className=\"sidebar-btn\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FaGithub />\r\n            <span> {intl.formatMessage({ id: \"viewSource\" })}</span>\r\n          </a>\r\n        </div> */}\r\n      </SidebarFooter>\r\n    </ProSidebar>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { useIntl } from \"react-intl\";\r\nimport Aside from \"./Aside\";\r\n\r\nfunction Layout(props) {\r\n  const [rtl, setRtl] = useState(false);\r\n  const [toggled, setToggled] = useState(false);\r\n  const [collapse, setCollapse] = React.useState(false);\r\n  const intl = useIntl();\r\n\r\n  const handleRtlChange = (checked) => {\r\n    setRtl(checked);\r\n    //setLocale(checked ? \"ar\" : \"en\");\r\n  };\r\n\r\n  const handleToggleSidebar = (value) => {\r\n    setToggled(value);\r\n  };\r\n  const handleCollapseSidebar = (value) => {\r\n    setCollapse(value);\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${rtl ? \"rtl\" : \"\"} ${toggled ? \"toggled\" : \"\"}`}>\r\n      <Aside\r\n        id={\"Sidebar\"}\r\n        rtl={rtl}\r\n        toggled={toggled}\r\n        collapse={collapse}\r\n        handleToggleSidebar={handleToggleSidebar}\r\n        handleCollapseSidebar={handleCollapseSidebar}\r\n      />\r\n      <main className={`main ${collapse ? \"main-collapse\" : \"non-collapse\"}`}>\r\n        <Header title={props.title} handleToggleSidebar={handleToggleSidebar} />\r\n        <div className=\"app-content\">{props.children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport Layout from \"./Layout\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Layout>\r\n      <h1>About</h1>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport Layout from \"../../Layout\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { Grid, Card, Text } from \"@nextui-org/react\";\r\n\r\nfunction HomeView() {\r\n  return (\r\n    <Layout title=\"Home\">\r\n      <h1>About</h1>\r\n      <div className=\"Home\">\r\n        <div className=\"Container\">\r\n          <h3 className=\"HeadingText\">{\"Trang tổng quan về trang web \"}</h3>\r\n          <p className=\"DescriptionText\">{\"giới thiệu trang web\"}</p>\r\n\r\n          <Button\r\n            style={{ display: \"inline-block\" }}\r\n            className=\"button\"\r\n            variant=\"primary\"\r\n            // onClick={HandleStart}\r\n          >\r\n            <NavLink className={\"button-text\"} exact to={\"/Exam\"}>\r\n              Làm bài thi Toeic\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport { Image, Form, Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useRef } from \"react\";\r\n\r\nfunction QuizComponent({ HandleNextQuestion, DataQuestion }) {\r\n  const audioRef = useRef(null);\r\n  const Answer = ({ questionID, answer, answerID }) => {\r\n    return (\r\n      <Form.Check\r\n        type={\"radio\"}\r\n        name={`group-${questionID}`}\r\n        id={`answer-${questionID}-${answerID}`}\r\n        label={answer}\r\n      />\r\n    );\r\n  };\r\n  const Question = ({\r\n    questionID = \"q1\",\r\n    questionText = \"\",\r\n    answer = [\"(A)\", \"(B)\", \"(C)\", \"(D)\"],\r\n  }) => {\r\n    return (\r\n      <Form.Group controlId={questionID} key={`default-radio`} className=\"mb-3\">\r\n        <Form.Label className=\"question-text\">{questionText}</Form.Label>\r\n        {answer.map((item, index) => {\r\n          return (\r\n            <Form.Check\r\n              type={\"radio\"}\r\n              name={`group-${questionID}`}\r\n              id={`answer-${questionID}-${index + 1}`}\r\n              label={item}\r\n            />\r\n            // <Answer\r\n            //   key={index + 1}\r\n            //   questionID={questionID}\r\n            //   answer={item}\r\n            //   answerID={index + 1}\r\n            // />\r\n          );\r\n        })}\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    event.preventDefault();\r\n    audioRef.current?.pause();\r\n    HandleNextQuestion();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h1>About</h1> */}\r\n      <Container className=\"quiz\">\r\n        <Row className=\"datum\">\r\n          {DataQuestion.audio ? (\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"auto\">\r\n                <audio ref={audioRef} controls>\r\n                  <source src={DataQuestion.audio} type=\"audio/mpeg\" />\r\n                </audio>\r\n              </Col>\r\n            </Row>\r\n          ) : null}\r\n          {DataQuestion.image ? (\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"auto\">\r\n                <Image\r\n                  width=\"350\"\r\n                  height=\"300\"\r\n                  src={DataQuestion.image}\r\n                  alt=\"Default Image\"\r\n                  // objectFit=\"cover\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          ) : null}\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"auto\">\r\n              <p\r\n                dangerouslySetInnerHTML={{ __html: DataQuestion.paragraph }}\r\n                className=\"paragraph\"\r\n              ></p>\r\n            </Col>\r\n          </Row>\r\n        </Row>\r\n        <Row className=\"list-question\">\r\n          {/* <Form>\r\n            <div key={`default-radio`} className=\"mb-3\">\r\n              <Form.Label className=\"question-text\">Question 1</Form.Label>\r\n              <Form.Check\r\n                type={\"radio\"}\r\n                name=\"group1\"\r\n                id={`answer-1-1`}\r\n                label={`default radio`}\r\n              />\r\n              <Form.Check\r\n                type={\"radio\"}\r\n                name=\"group1\"\r\n                id={`answer-1-2`}\r\n                label={`default radio`}\r\n              />\r\n              <Form.Check\r\n                type={\"radio\"}\r\n                name=\"group1\"\r\n                id={`answer-1-3`}\r\n                label={`default radio`}\r\n              />\r\n              <Form.Check\r\n                type={\"radio\"}\r\n                name=\"group1\"\r\n                id={`answer-1-4`}\r\n                label={`default radio`}\r\n              />\r\n            </div>\r\n          </Form> */}\r\n\r\n          <Form onSubmit={handleSubmit}>\r\n            {DataQuestion.questionList.map((item) => {\r\n              return (\r\n                <Form.Group\r\n                  controlId={`${DataQuestion.id}-${item.id}`}\r\n                  key={`${DataQuestion.id}-${item.id}`}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Label className=\"question-text\">\r\n                    {item.question}\r\n                  </Form.Label>\r\n                  {item.answer.map((itemAnswer, index) => {\r\n                    return (\r\n                      <Form.Check\r\n                        key={`answer-${item.id}-${index + 1}`}\r\n                        type={\"radio\"}\r\n                        name={`group-${item.id}`}\r\n                        id={`answer-${item.id}-${index + 1}`}\r\n                        label={itemAnswer}\r\n                      />\r\n                      // <Answer\r\n                      //   key={index + 1}\r\n                      //   questionID={questionID}\r\n                      //   answer={item}\r\n                      //   answerID={index + 1}\r\n                      // />\r\n                    );\r\n                  })}\r\n                </Form.Group>\r\n                // <Question\r\n                //   key={item.id}\r\n                //   questionID={item.id}\r\n                //   questionText={item.question}\r\n                //   answer={item.answer}\r\n                // />\r\n              );\r\n            })}\r\n            {/* <Question /> */}\r\n\r\n            <Button className=\"submit-button\" variant=\"primary\" type=\"submit\">\r\n              Next\r\n            </Button>\r\n          </Form>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizComponent;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Layout from \"../../Layout\";\r\nimport \"./styles.css\";\r\nimport QuizComponent from \"../../Components/QuizComponent\";\r\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\n// import { Grid, Card, Text } from \"@nextui-org/react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport data from \"../../test/dataTest.json\";\r\n\r\nfunction ExamView() {\r\n  let expiryTimestamp = new Date().setHours(new Date().getHours() + 2);\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({\r\n    autoStart: false,\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n  const test = `refer to the following e-mail.\r\n        <br />\r\n        <br />\r\n        <b>To: </b>Vincent Silvers vsilvers@tjrprinting.com\r\n        <br />\r\n        <b>From:</b> Joseph Craig jcraig@tjrprinting.com\r\n        <br />\r\n        <b>Date:</b> June 20\r\n        <br />\r\n        <b>Subject:</b> Spelling error on Lambert posters\r\n        <br />\r\n        <br />\r\n        Hi Vincent,\r\n        <br />\r\n        <br />\r\n        It’s just come to my attention that there’s been a setback with the\r\n        Lambert project. Apparently the posters for their product launch contain\r\n        a (135)____.\r\n        <br />\r\n        The company name was typed incorrectly in the heading on the final\r\n        version. As the liaison for this client, I need you to contact Mr.\r\n        Lambert, notify him of the issue, and (136) ___ for the oversight.\r\n        <br />\r\n        Because we were responsible for this error, please reassure Mr. Lambert\r\n        that reprinting of the posters will occur at (137) ___ expense and will\r\n        be completed by the end of next week.\r\n        <br />\r\n        (138) ____.\r\n        <br />\r\n        <br />\r\n        Regards,\r\n        <br />\r\n        Joseph Craig Production Manager, TJR Printing\r\n      </p>`;\r\n  const [activeTopic, setActiveTopic] = React.useState(0);\r\n  const dataProcess = (data) => {\r\n    const data1 = data.filter(\r\n      (item) => item.parentId == \"62b69492bbc57b27fe10f7ac\"\r\n    );\r\n    const data2 = data1.map((item, index) => {\r\n      var questionList;\r\n      if (item.hasChild == 1) {\r\n        const temp = item.childCards;\r\n        questionList = temp.map((item2) => {\r\n          const questionListReturn = {\r\n            id: item2._id + \"-\" + index,\r\n            question: item2.question.text,\r\n            answer: [...item2.answer.texts, ...item2.answer.choices].sort(\r\n              (a, b) => b.slice(0, 3) - a.slice(0, 3)\r\n            ),\r\n            correctAnswer: item2.answer.texts[0],\r\n          };\r\n          return questionListReturn;\r\n        });\r\n      } else {\r\n        questionList = [\r\n          {\r\n            id: item._id + \"-\" + index,\r\n            question: item.question.text,\r\n            answer: [...item.answer.texts, ...item.answer.choices].sort(\r\n              (a, b) => (b.slice(0, 3) < a.slice(0, 3) ? 1 : -1)\r\n            ),\r\n            correctAnswer: item.answer.texts[0],\r\n          },\r\n        ];\r\n      }\r\n      const itemReturn = {\r\n        id: item._id + \"-\" + index,\r\n        audio: item.question.sound ? item.question.sound : null,\r\n        image: item.question.image\r\n          ? `https://storage.googleapis.com/${item.question.image}`\r\n          : \"\",\r\n        paragraph: item.question.text,\r\n        questionList: questionList,\r\n      };\r\n      return itemReturn;\r\n    });\r\n    return data2;\r\n  };\r\n  const DataQuestion = [\r\n    {\r\n      id: \"topic1\",\r\n      audio:\r\n        \"https://storage.googleapis.com/estudyme/dev/2022/06/27/30449101.mp3\",\r\n      image:\r\n        \"https://storage.googleapis.com/kslearning/images/418922160-1620725865601-pic1.png\",\r\n      paragraph: \"\",\r\n      questionList: [\r\n        {\r\n          question: \"\",\r\n          answer: [\"(A)\", \"(B)\", \"(C)\", \"(D)\"],\r\n          correctAnswer: \"(A)\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"topic2\",\r\n      audio: \"\",\r\n      image: \"\",\r\n      paragraph: \"\",\r\n      questionList: [\r\n        {\r\n          id: \"q1\",\r\n          question:\r\n            \"The assets of Marble Faun Publishing Company ___ last quarter when one of their main local distributors went out of business.\",\r\n          answer: [\"suffer\", \"suffers\", \"suffering\", \"suffered\"],\r\n          correctAnswer: \"suffered\",\r\n        },\r\n        {\r\n          id: \"q2\",\r\n          question:\r\n            \"lndie film director Luke Steele will be in London for the premiere of ___ new movie.\",\r\n          answer: [\"him\", \"his\", \"himself\", \"he\"],\r\n          correctAnswer: \"his\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"topic3\",\r\n      audio:\r\n        \"https://storage.googleapis.com/estudyme/dev/2022/06/27/78867473.mp3\",\r\n      image: \"\",\r\n      paragraph: \"\",\r\n      questionList: [\r\n        {\r\n          id: \"q1\",\r\n          question: \"Who is the woman?\",\r\n          answer: [\r\n            \"(A) A restaurant manager\",\r\n            \"(B) A presentation participant\",\r\n            \"(C) A workshop organizer\",\r\n            \"(D) A cook\",\r\n          ],\r\n          correctAnswer: \"(D) A cook\",\r\n        },\r\n        {\r\n          id: \"q2\",\r\n          question:\r\n            \"What does the woman mean when she says, “I have a weekly meeting soon”?\",\r\n          answer: [\r\n            \"(A) She cannot talk with the man for long.\",\r\n            \"(B) She will discuss the problem soon.\",\r\n            \"(C) She will invite the man to a weekly meeting.\",\r\n            \"(D) She will participate in the workshop next Friday.\",\r\n          ],\r\n          correctAnswer:\r\n            \"(D) She will participate in the workshop next Friday.\",\r\n        },\r\n        {\r\n          id: \"q3\",\r\n          question: \"What does Kimmy additionally want?\",\r\n          answer: [\r\n            \"(A) A cheaper price\",\r\n            \"(B) Additional food items\",\r\n            \"(C) Some alcohol\",\r\n            \"(D) Dinner menus\",\r\n          ],\r\n          correctAnswer: \"(D) Dinner menus\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"topic4\",\r\n      audio: \"\",\r\n      image: \"\",\r\n      paragraph: `${test}`,\r\n      questionList: [\r\n        {\r\n          id: \"q1\",\r\n          question: \"135\",\r\n          answer: [\r\n            \"(A) statement\",\r\n            \"(B)correction\",\r\n            \"(C)misprint\",\r\n            \"(D)location\",\r\n          ],\r\n          correctAnswer: \"(D)location\",\r\n        },\r\n        {\r\n          id: \"q2\",\r\n          question: \"136\",\r\n          answer: [\r\n            \"(A) apologizing\",\r\n            \"(B)apologized\",\r\n            \"(A) apologizes\",\r\n            \"(D)apologize\",\r\n          ],\r\n          correctAnswer: \"(D)apologize\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const [isStart, setIsStart] = React.useState(false);\r\n  const HandleStart = () => {\r\n    start();\r\n    setIsStart(!isStart);\r\n  };\r\n  const HandleNextQuestion = () => {\r\n    if (activeTopic + 1 === data.length) return;\r\n    setActiveTopic(activeTopic + 1);\r\n  };\r\n  const TestInforCard = () => {\r\n    return (\r\n      <Row>\r\n        <Col></Col>\r\n\r\n        <Col>\r\n          <Card\r\n            className=\"text-center\"\r\n            style={{\r\n              width: \"20rem\",\r\n              padding: \"2rem\",\r\n              backgroundColor: \"#ebd081\",\r\n            }}\r\n          >\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://vietmybinhduong.edu.vn/wp-content/uploads/2022/08/t1.jpg\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Bài thi thử Toeic :</Card.Title>\r\n              <Card.Text>\r\n                Số lượng câu hỏi : 100 câu <br />\r\n                Thời gian làm bài thi : 120 phút <br />\r\n              </Card.Text>\r\n              <Button\r\n                style={\r\n                  isStart ? { display: \"none\" } : { display: \"inline-block\" }\r\n                }\r\n                className=\"button\"\r\n                variant=\"primary\"\r\n                onClick={HandleStart}\r\n              >\r\n                Bắt đầu thi thử\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"Home\">\r\n        <Container className=\"Container\">\r\n          {/* <h1 className=\"HeadingText\">{\"Test\"}</h1> */}\r\n          {isStart ? (\r\n            <>\r\n              <Row>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col>\r\n                  <p className=\"time-text float-right\">\r\n                    {hours}:{minutes}:{seconds}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                {dataProcess(data).map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={item.id}\r\n                      className={`topic ${\r\n                        activeTopic === index ? \"Active\" : \"Inactive\"\r\n                      }`}\r\n                    >\r\n                      <QuizComponent\r\n                        DataQuestion={item}\r\n                        HandleNextQuestion={HandleNextQuestion}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Row>\r\n            </>\r\n          ) : (\r\n            <TestInforCard />\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ExamView;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport Layout from \"../../Layout\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n// import { Grid, Card, Text } from \"@nextui-org/react\";\r\n\r\nfunction ToeicStructView() {\r\n  const Data = {\r\n    Listening: [\r\n      {\r\n        id: 1,\r\n        name: \"Part 1 : Mô tả hình ảnh\",\r\n        description:\r\n          \"Tương ứng với mỗi bức ảnh, bạn sẽ được nghe 04 câu mô tả về nó. Nhiệm vụ của bạn là phải chọn câu mô tả đúng nhất cho bức ảnh.\",\r\n        count: 10,\r\n        bgColor: \"#ed5c64\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Part 2 : Hỏi và Đáp\",\r\n        description:\r\n          \"Bạn sẽ nghe một câu hỏi (hoặc câu nói) và 03 lựa chọn trả lời. Nhiệm vụ của bạn là phải chọn ra câu trả lời đúng nhất trong ba đáp án A-B-C.\",\r\n        count: 30,\r\n        bgColor: \"#f49f0a\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Part 3 : Hội thoại ngắn\t\",\r\n        description:\r\n          \"Bạn sẽ nghe 10 đoạn hội thoại ngắn. Mỗi đoạn có 03 câu hỏi. Nhiệm vụ của bạn là chọn ra câu trả lời đúng nhất trong 04 đáp án của đề thi.\",\r\n        count: 30,\r\n        bgColor: \"#04AA6D\",\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"Part 4 : Đoạn thông tin ngắn\",\r\n        description:\r\n          \"Bạn sẽ nghe 10 đoạn thông tin ngắn. Mỗi đoạn có 03 câu hỏi. Nhiệm vụ của bạn là chọn ra câu trả lời đúng nhất trong số 04 đáp án được cung cấp.\",\r\n        count: 30,\r\n        bgColor: \"#f08700\",\r\n      },\r\n    ],\r\n    Reading: [\r\n      {\r\n        id: 5,\r\n        name: \"Part 5 : Hoàn thành câu\",\r\n        description: \"Bạn cần phải chọn từ đúng nhất để hoàn thành câu.\",\r\n        count: 40,\r\n        bgColor: \"#747474\",\r\n      },\r\n      {\r\n        id: 6,\r\n        name: \"Part 6 : Hoàn Thành Đoạn Văn\",\r\n        description:\r\n          \"Mỗi đoạn văn có 03 chỗ trống. Bạn phải điền từ thích hợp còn thiếu vào mỗi chỗ trống trong đoạn văn đó.\",\r\n        count: 12,\r\n        bgColor: \"#c2c120\",\r\n      },\r\n      {\r\n        id: 7,\r\n        name: \"Part 7.1 : Đọc hiểu đoạn đơn\",\r\n        description:\r\n          \"Đề thi có thể có từ 7-10 đoạn văn đơn. Hết mỗi đoạn văn sẽ có 2-5 câu hỏi.\",\r\n        count: 28,\r\n        bgColor: \"#ef4a50\",\r\n      },\r\n      {\r\n        id: 8,\r\n        name: \"Part 7.2 : Đọc hiểu đoạn kép\",\r\n        description:\r\n          \"Trong phần này sẽ có từ 04 cặp đoạn văn. Hết mỗi cặp đoạn văn sẽ có 5 câu hỏi.\",\r\n        count: 20,\r\n        bgColor: \"#00a6a6\",\r\n      },\r\n    ],\r\n  };\r\n  const Content = ({ name, description }) => {\r\n    return (\r\n      <>\r\n        <b className=\"HeadingText\">{name}</b>\r\n        <p className=\"DescriptionText\">{description}</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout title=\"Thông tin về bài thi Toeic\">\r\n      {/* <h1>About</h1> */}\r\n      <p>\r\n        Một bài thi TOEIC đầy đủ gồm hai phần thi: Phần thi Listening (nghe\r\n        hiểu) trong 45 phút và phần thi Reading (đọc hiểu) trong 75 phút. Mỗi\r\n        phần thi có 100 câu. Tổng số câu hỏi của cả hai phần thi là 200 câu.\r\n        Tổng thời gian làm bài là 120 phút hay 2 tiếng. Cấu trúc và nội dung chi\r\n        tiết của từng phần thi như sau:\r\n      </p>\r\n      <div className=\"Toeic-Struct\">\r\n        <div className=\"Container\">\r\n          <h4 className=\"HeadingText\">{\"Phần A : Listening (Nghe hiểu)\"}</h4>\r\n\r\n          <div className=\"summary-bar-container\">\r\n            {Data.Listening.map((item) => {\r\n              return (\r\n                <div\r\n                  className=\"summary-bar text-center\"\r\n                  style={{\r\n                    width: `${item.count}%`,\r\n                    backgroundColor: `${item.bgColor}`,\r\n                    maxHeight: 40,\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                  key={item.key}\r\n                >\r\n                  {item.name}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {Data.Listening.map((item) => {\r\n            return (\r\n              <Content\r\n                key={item.id}\r\n                name={item.name}\r\n                description={item.description}\r\n              />\r\n            );\r\n          })}\r\n          <h4 className=\"HeadingText\">{\"Phần B : Reading (Đọc hiểu)\"}</h4>\r\n          <div className=\"summary-bar-container\">\r\n            {Data.Reading.map((item) => {\r\n              return (\r\n                <div\r\n                  className=\"summary-bar text-center\"\r\n                  style={{\r\n                    width: `${item.count}%`,\r\n                    backgroundColor: `${item.bgColor}`,\r\n                    maxHeight: 40,\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                  key={item.key}\r\n                >\r\n                  {item.name}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {Data.Reading.map((item) => {\r\n            return (\r\n              <Content\r\n                key={item.id}\r\n                name={item.name}\r\n                description={item.description}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ToeicStructView;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport Layout from \"../../Layout\";\r\nimport { Image, Col, Row, Container } from \"react-bootstrap\";\r\n// import { Grid, Card, Text } from \"@nextui-org/react\";\r\n\r\nfunction SummaryView() {\r\n  /**\r\n   * This renders an item in the table of contents list.\r\n   * scrollIntoView is used to ensure that when a user clicks on an item, it will smoothly scroll.\r\n   */\r\n  const Headings = ({ headings, activeId }) => (\r\n    <ul>\r\n      {headings.map((heading) => (\r\n        <li\r\n          key={heading.id}\r\n          className={heading.id === activeId ? \"active\" : \"\"}\r\n        >\r\n          <a\r\n            href={`#${heading.id}`}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              document.querySelector(`#${heading.id}`).scrollIntoView({\r\n                behavior: \"smooth\",\r\n              });\r\n            }}\r\n          >\r\n            {heading.title.split(\"-\")[0]}\r\n          </a>\r\n          {heading.items.length > 0 && (\r\n            <ul>\r\n              {heading.items.map((child) => (\r\n                <li\r\n                  key={child.id}\r\n                  className={child.id === activeId ? \"active\" : \"\"}\r\n                >\r\n                  <a\r\n                    href={`#${child.id}`}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      document.querySelector(`#${child.id}`).scrollIntoView({\r\n                        behavior: \"smooth\",\r\n                      });\r\n                    }}\r\n                  >\r\n                    {child.title.split(\"-\")[0]}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  /**\r\n   * Dynamically generates the table of contents list, using any H2s and H3s it can find in the main text\r\n   */\r\n  const useHeadingsData = () => {\r\n    const [nestedHeadings, setNestedHeadings] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n      const headingElements = Array.from(\r\n        document.querySelectorAll(\"main h2, main h3\")\r\n      );\r\n\r\n      // Created a list of headings, with H3s nested\r\n      const newNestedHeadings = getNestedHeadings(headingElements);\r\n      setNestedHeadings(newNestedHeadings);\r\n    }, []);\r\n\r\n    return { nestedHeadings };\r\n  };\r\n\r\n  const getNestedHeadings = (headingElements) => {\r\n    const nestedHeadings = [];\r\n\r\n    headingElements.forEach((heading, index) => {\r\n      const { innerText: title, id } = heading;\r\n\r\n      if (heading.nodeName === \"H2\") {\r\n        nestedHeadings.push({ id, title, items: [] });\r\n      } else if (heading.nodeName === \"H3\" && nestedHeadings.length > 0) {\r\n        nestedHeadings[nestedHeadings.length - 1].items.push({\r\n          id,\r\n          title,\r\n        });\r\n      }\r\n    });\r\n\r\n    return nestedHeadings;\r\n  };\r\n\r\n  const useIntersectionObserver = (setActiveId) => {\r\n    const headingElementsRef = React.useRef({});\r\n    React.useEffect(() => {\r\n      const callback = (headings) => {\r\n        headingElementsRef.current = headings.reduce((map, headingElement) => {\r\n          map[headingElement.target.id] = headingElement;\r\n          return map;\r\n        }, headingElementsRef.current);\r\n\r\n        // Get all headings that are currently visible on the page\r\n        const visibleHeadings = [];\r\n        Object.keys(headingElementsRef.current).forEach((key) => {\r\n          const headingElement = headingElementsRef.current[key];\r\n          if (headingElement.isIntersecting)\r\n            visibleHeadings.push(headingElement);\r\n        });\r\n\r\n        const getIndexFromId = (id) =>\r\n          headingElements.findIndex((heading) => heading.id === id);\r\n\r\n        // If there is only one visible heading, this is our \"active\" heading\r\n        if (visibleHeadings.length === 1) {\r\n          setActiveId(visibleHeadings[0].target.id);\r\n          // If there is more than one visible heading,\r\n          // choose the one that is closest to the top of the page\r\n        } else if (visibleHeadings.length > 1) {\r\n          const sortedVisibleHeadings = visibleHeadings.sort(\r\n            (a, b) => getIndexFromId(a.target.id) > getIndexFromId(b.target.id)\r\n          );\r\n          console.log(sortedVisibleHeadings);\r\n          setActiveId(sortedVisibleHeadings[0].target.id);\r\n        }\r\n      };\r\n\r\n      const observer = new IntersectionObserver(callback, {\r\n        root: document.querySelector(\"iframe\"),\r\n        rootMargin: \"0px\",\r\n      });\r\n\r\n      const headingElements = Array.from(document.querySelectorAll(\"h2, h3\"));\r\n\r\n      headingElements.forEach((element) => observer.observe(element));\r\n\r\n      return () => observer.disconnect();\r\n    }, [setActiveId]);\r\n  };\r\n\r\n  /**\r\n   * Renders the table of contents.\r\n   */\r\n  const TableOfContents = () => {\r\n    const [activeId, setActiveId] = React.useState();\r\n    const { nestedHeadings } = useHeadingsData();\r\n    useIntersectionObserver(setActiveId);\r\n    console.log(activeId);\r\n    return (\r\n      <nav className=\"summary\" aria-label=\"Table of contents\">\r\n        <Headings headings={nestedHeadings} activeId={activeId} />\r\n      </nav>\r\n    );\r\n  };\r\n  const DummyText = \"aaa\";\r\n  return (\r\n    <Layout title=\"Tổng hợp kiến thức thi Toeic\">\r\n      <Container className=\"container-summary\">\r\n        <Row>\r\n          <Col md=\"auto\">\r\n            <main className=\"summary\">\r\n              <h2 id=\"Tenses-header\">I. Tenses - thì tiếng Anh</h2>\r\n              <p>\r\n                Về cơ bản các thì tiếng Anh trong ngữ pháp TOEIC cũng không khác\r\n                với ngữ pháp thông thường là bao nhiêu. Tuy nhiên khi bạn có\r\n                kiến thức sâu rộng về ngữ pháp thì bạn sẽ đạt được những lợi thế\r\n                nhất định khi làm bài kiểm tra TOEIC. Cũng giống như tất cả các\r\n                kỳ thi tiếng Anh khác, bạn cần phải nắm vững ngữ pháp về thì\r\n                trước khi làm chủ được kiến thức và vận dụng sâu rộng. Dưới đây\r\n                là 12 thì cơ bản trong ngữ pháp TOEIC thí sinh cần nắng vững:\r\n              </p>\r\n\r\n              <h6 id=\"topic-1-header\">Topic 1: Thì hiện tại đơn </h6>\r\n              <h6 id=\"topic-2-header\">Topic 2: Thì hiện tại tiếp diễn </h6>\r\n              <h6 id=\"topic-3-header\">Topic 3: Thì hiện tại hoàn thành </h6>\r\n              <h6 id=\"topic-4-header\">\r\n                Topic 4: Thì hiện tại hoàn thành tiếp diễn\r\n              </h6>\r\n              <h6 id=\"topic-5-header\">Topic 5: Thì quá khứ đơn </h6>\r\n              <h6 id=\"topic-6-header\">Topic 6: Thì quá khứ tiếp diễn </h6>\r\n              <h6 id=\"topic-7-header\">Topic 7: Thì quá khứ hoàn thành </h6>\r\n              <h6 id=\"topic-8-header\">\r\n                Topic 8: Thì quá khứ hoàn thành tiếp diễn\r\n              </h6>\r\n              <h6 id=\"topic-9-header\">Topic 9: Thì tương lai đơn </h6>\r\n              <h6 id=\"topic-10-header\">Topic 10: Thì tương lai hoàn thành </h6>\r\n              <h6 id=\"topic-11-header\">\r\n                Topic 11: Thì tương lai hoàn thành tiếp diễn\r\n              </h6>\r\n              <h6 id=\"topic-12-header\">Topic 12: Thì tương lai tiếp diễn </h6>\r\n              <Image\r\n                fluid={true}\r\n                src=\"https://prep.vn/blog/wp-content/uploads/2022/04/12-thi-trong-tieng-anh.jpg\"\r\n              />\r\n              <h2 id=\"Gerund-header\">\r\n                II. Gerund and infinitive - Dạng thức của động từ (dạng Ving, to\r\n                V)\r\n              </h2>\r\n              <p>\r\n                Chắc chắn Danh động từ và động từ nguyên thể là một phần không\r\n                thể thiếu trong quá trình ôn luyện ngữ pháp TOEIC. Các giám khảo\r\n                chấm thi thường đánh giá rất cao những bạn có thể sử dụng nhuần\r\n                nhuyễn Danh động từ và động từ nguyên thể trong bài thi của mình\r\n                bởi vì đây là một chủ điểm ngữ pháp khó và yêu cầu bạn cần có\r\n                thời gian luyện tập mới có thể sử dụng chúng một cách tự nhiên\r\n                nhất.\r\n              </p>\r\n              <h2 id=\"Modal-verbs-header\">\r\n                III. Modal verbs - Động từ khuyết thiếu\r\n              </h2>\r\n              <p>\r\n                Động từ khuyết thiếu - Modal Verb là chủ điểm ngữ pháp TOEIC\r\n                không thể thiếu tiếp theo trong quá trình học của bạn. Động từ\r\n                khuyết thiếu là những động từ với chức năng hỗ trợ cho động từ\r\n                chính trong câu chứ không đứng một mình giống như động từ. Với\r\n                chức năng bổ ngữ cho động từ, động từ khiếm khuyết cũng mang\r\n                những ý nghĩa riêng để thay đổi ý nghĩa của câu\r\n              </p>\r\n              <Image\r\n                fluid={true}\r\n                src=\"https://prep.vn/blog/wp-content/uploads/2021/11/so-do-tu-duy-ve-dong-tu-khuyet-thieu.png\"\r\n              />\r\n              <h2 id=\"Comparison-header\">IV. Comparison - Câu so sánh</h2>\r\n              <p>\r\n                Câu so sánh - chủ điểm ngữ pháp TOEIC tiếp theo bạn cần lưu ý.\r\n                Trong tiếng Anh có 3 dạng so sánh đó là so sánh nhất, so sánh\r\n                bằng và so sánh hơn. Bạn cần phải hiểu thật kỹ về cấu trúc hình\r\n                thành 3 dạng so sánh và biết cách phân biệt 3 loại so sánh này.\r\n                Trong mỗi dạng so sánh sẽ có những trường hợp đặc biệt mà bạn\r\n                cần phải nắm vững để không mất điểm oan trong các phần thi như\r\n                Viết hay Nói.\r\n              </p>\r\n              <p>{DummyText}</p>\r\n              <p>{DummyText}</p>\r\n              <p>{DummyText}</p>\r\n              <h2 id=\"Passive-header\">V. Passive Voice - Câu bị động</h2>\r\n              <p>\r\n                Câu bị động - kiến thức ngữ pháp TOEIC tiếp theo mà bạn không\r\n                thể bỏ qua. Thể bị động là thể khi chủ ngữ là người hoặc là vật\r\n                bị chịu tác động của ngoại cảnh, hành vi khác lên nó. Câu bị\r\n                động có tác dụng nhấn mạnh đến đối tượng bị chịu tác động của\r\n                hành động đó. Trong đó cần lưu ý đặc biệt là thì của câu bị động\r\n                luôn phải tuân theo thì của câu chủ động.\r\n              </p>\r\n              <p>{DummyText}</p>\r\n              <h2 id=\"Subject-header\">\r\n                VI. Subject - Verb Agreement: Sự hòa hợp giữa chủ ngữ và động từ\r\n              </h2>\r\n              <p>{DummyText}</p>\r\n              <h2 id=\"IF-header\">VII. IF - Câu điều kiện</h2>\r\n              <p>\r\n                Trong tiếng Anh câu điều kiện thường được dùng để diễn đạt, giải\r\n                thích về một sự việc nào đó có thể sẽ xảy ra khi điều kiện nói\r\n                đến xảy ra. Bạn cần lưu ý đến chủ điểm ngữ pháp TOEIC về câu\r\n                điều kiện để đạt những số điểm cao trong kỳ thi này. Hầu hết khi\r\n                các câu điều kiện đều chứa “if”. Một câu điều kiện thường bao\r\n                gồm hai mệnh đề đó là:\r\n              </p>\r\n              <h2 id=\"Clause-header\">VIII. Clause - Mệnh đề </h2>\r\n              <p>\r\n                Cấu trúc câu tiếng Anh giúp các bạn hiểu được nguyên nhân tại\r\n                sao lại sử dụng các từ loại này mà không sử dụng từ loại khác,\r\n                tại sao chọn từ này và cách sắp xếp các từ loại trong câu như\r\n                thế nào? Cấu trúc ngữ pháp tiếng Anh của một câu được chia thành\r\n                hai dạng chính: Dạng đơn giản (câu rút gọn, câu đặc biệt, câu ít\r\n                các thành phần) và cấu trúc phức tạp ( câu đa chủ vị, và đa\r\n                thành phần). Hãy ôn tập thật kỹ kiến thức ngữ pháp TOEIC này để\r\n                “rinh” những số điểm thật cao trong bài thi TOEIC nhé!\r\n              </p>\r\n              <h2 id=\"past-p2-header\">\r\n                IX. Past Participle - Quá khứ phân từ (động từ đuôi ED) và hiện\r\n                tại phân từ (động từ đuôi -ing)\r\n              </h2>\r\n              <p>\r\n                Hiện tại phân từ hay còn là động từ thêm đuôi “V-ing”. Hiện tại\r\n                phân từ hay còn được gọi là danh động từ, được thành lập bằng\r\n                cách thêm ”-ing” vào sau động từ.\r\n              </p>\r\n              <p>\r\n                Quá khứ phân từ hay còn là động từ thêm đuôi ”-ed” (đối với các\r\n                động từ có quy tắc và các động từ nằm ở cột cuối cùng trong bảng\r\n                liệt kê các động từ bất quy tắc). Ví dụ:\r\n              </p>\r\n              <h2 id=\"Subjunctive-header\">X. Subjunctive - Câu giả định</h2>\r\n              <p>\r\n                Ngữ pháp TOEIC thông dụng tiếp theo bạn nên nắm vững chính là\r\n                câu giả định (Subjunctive). Câu giả định (câu cầu khiến) là loại\r\n                câu được sử dụng khi người nói mong muốn ai đó làm một việc gì\r\n                đó. Cấu trúc giả định chỉ mang tính chất cầu khiến chứ không\r\n                biểu đạt tính ép buộc như câu mệnh lệnh.\r\n              </p>\r\n              <h2 id=\"Question-header\">\r\n                XI. The Question - Các loại câu hỏi hay xuất hiện trong tiếng\r\n                Anh\r\n              </h2>\r\n              <p>\r\n                Kiến thức ngữ pháp TOEIC về các loại câu hỏi trong Tiếng Anh\r\n                thường hay xuất hiện rất nhiều trong bài thi TOEIC, đặc biệt là\r\n                phần thi Listening. Chính vì vậy các bạn hãy ôn tập thật kỹ về\r\n                kiến thức này để có thể tự tin đạt điểm cao nhé!\r\n              </p>\r\n              <h2 id=\"Types-header\">XII. Types of words - Từ loại Tiếng Anh</h2>\r\n              <p>\r\n                Phần tiếp sau đây cũng vô cùng quan trọng trong khi các bạn ôn\r\n                luyện ngữ pháp TOEIC đó là phần thi về các từ loại Tiếng Anh.\r\n                Trong Tiếng Anh có các từ loại chính sau mà bạn cần đặc biệt lưu\r\n                tâm:\r\n              </p>\r\n            </main>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <TableOfContents />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/* <h1>About</h1>\r\n      <div className=\"Home\">\r\n        <div className=\"Container\">\r\n          <h3 className=\"HeadingText\">{\"Tổng hợp kiến thức thi Toeic\"}</h3>\r\n          <p className=\"DescriptionText\">{\" Các tài liệu tham khảo :\"}</p>\r\n          <a href=\"https://prep.vn/blog/ngu-phap-toeic/\" class=\"link-primary\">\r\n            Tổng hợp kiến thức\r\n          </a>\r\n          <br />\r\n          <a\r\n            href=\"https://tienganhmoingay.com/meo-thi-toeic/\"\r\n            class=\"link-primary\"\r\n          >\r\n            Mẹo thi toeic\r\n          </a>\r\n        </div>\r\n      </div> */}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React from \"react\";\r\nimport About from \"./About\";\r\nimport HomeView from \"./Views/HomeView\";\r\nimport ExamView from \"./Views/ExamView\";\r\nimport ToeicStructView from \"./Views/ToeicStructView\";\r\nimport SummaryView from \"./Views/SummaryView\";\r\nimport Layout from \"./Layout.jsx\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path={\"/\"}>\r\n          <HomeView />\r\n        </Route>\r\n        <Route exact path={\"/about\"}>\r\n          <About />\r\n        </Route>\r\n        <Route exact path={\"/Home\"}>\r\n          <HomeView />\r\n        </Route>\r\n        <Route exact path={\"/Information\"}>\r\n          <ToeicStructView />\r\n        </Route>\r\n        <Route exact path={\"/Summary\"}>\r\n          <SummaryView />\r\n        </Route>\r\n        <Route exact path={\"/Exam\"}>\r\n          <ExamView />\r\n        </Route>\r\n        <Route exact path={\"/*\"}>\r\n          <HomeView />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useState } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport messages from \"./messages\";\nimport Routes from \"./Routes\";\nimport { HashRouter  as Router } from \"react-router-dom\";\n\nfunction App() {\n  const [locale, setLocale] = useState(\"en\");\n\n  return (\n    <IntlProvider locale={locale} messages={messages[locale]}>\n      <Router>\n        <Routes setLocale={setLocale} />\n      </Router>\n    </IntlProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n","module.exports = {\r\n    ar: {\r\n      title: \"رياكت پرو سايد بار\",\r\n      sidebarTitle: \"پرو سايد بار\",\r\n      description:\r\n        \"شريط جانبي مع قوائم منسدلة وعدد غير محدود من القوائم الفرعية المتداخلة\",\r\n      dashboard: \"لوحة القيادة\",\r\n      components: \"مكونات\",\r\n      dropdown: \"اسقاط\",\r\n      submenu: \"قائمة فرعية\",\r\n      multiLevel: \"متعدد المستويات\",\r\n      collapsed: \"انطوى\",\r\n      rtl: \"ر ت ل\",\r\n      image: \"صورة الخلفية\",\r\n      new: \"جديد\",\r\n      withPrefix: \"مع البادئة\",\r\n      withSuffix: \"مع اللاحقة\",\r\n      viewSource: \"عرض الكود\"\r\n    },\r\n    en: {\r\n      title: \"React Pro Sidebar\",\r\n      sidebarTitle: \"Pro Sidebar\",\r\n      description:\r\n        \"React sidebar library with dropdown menus and unlimited number of nested submenus\",\r\n      dashboard: \"Dashboard\",\r\n      components: \"Components\",\r\n      dropdown: \"Dropdown\",\r\n      submenu: \"Submenu\",\r\n      multiLevel: \"Multi Level\",\r\n      collapsed: \"Collapsed\",\r\n      rtl: \"RTL\",\r\n      image: \"Background image\",\r\n      new: \"NEW\",\r\n      withPrefix: \"With Prefix\",\r\n      withSuffix: \"With Suffix\",\r\n      viewSource: \"View Source\"\r\n    }\r\n  };\r\n  "],"sourceRoot":""}